{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let GlobalErrorHandler = /*#__PURE__*/(() => {\n  class GlobalErrorHandler {\n    constructor(router) {\n      this.router = router;\n    }\n\n    handleError(error) {\n      const chunkFailedMessage = /Loading chunk [\\d]+ failed/; //console.log(error.message);\n\n      if (chunkFailedMessage.test(error.message)) {\n        var answer = confirm(\"New Updates Available Please Reload or Clear Browser Cache...\");\n        if (answer) window.location.reload();\n      }\n    }\n\n  }\n\n  GlobalErrorHandler.ɵfac = function GlobalErrorHandler_Factory(t) {\n    return new (t || GlobalErrorHandler)(i0.ɵɵinject(i1.Router));\n  };\n\n  GlobalErrorHandler.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GlobalErrorHandler,\n    factory: GlobalErrorHandler.ɵfac\n  });\n  return GlobalErrorHandler;\n})();","map":null,"metadata":{},"sourceType":"module"}