{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/share-data.service\";\nimport * as i2 from \"src/app/services/client-api.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/services/token.service\";\nimport * as i5 from \"src/app/services/toast-message.service\";\nimport * as i6 from \"../../../directives/number-only.directive\";\nimport * as i7 from \"@angular/common\";\n\nfunction SettingPopComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"dl\", 13);\n    i0.ɵɵelementStart(2, \"dt\");\n    i0.ɵɵtext(3, \"Stake\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"dd\");\n    i0.ɵɵelementStart(5, \"a\", 14);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"dd\");\n    i0.ɵɵelementStart(8, \"a\", 15);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"dd\");\n    i0.ɵɵelementStart(11, \"a\", 16);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"dd\");\n    i0.ɵɵelementStart(14, \"a\", 17);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"dd\");\n    i0.ɵɵelementStart(17, \"a\", 18);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"dd\");\n    i0.ɵɵelementStart(20, \"a\", 19);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"dd\");\n    i0.ɵɵelementStart(23, \"a\", 20);\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"dd\");\n    i0.ɵɵelementStart(26, \"a\", 21);\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"dd\", 22);\n    i0.ɵɵelementStart(29, \"a\", 23);\n    i0.ɵɵlistener(\"click\", function SettingPopComponent_ng_container_8_Template_a_click_29_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.editStake();\n    });\n    i0.ɵɵtext(30, \"Edit \");\n    i0.ɵɵelement(31, \"img\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"form\", 25);\n    i0.ɵɵlistener(\"ngSubmit\", function SettingPopComponent_ng_container_8_Template_form_ngSubmit_32_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.SaveBetStakeSetting();\n    });\n    i0.ɵɵelementStart(33, \"dl\", 26);\n    i0.ɵɵelementStart(34, \"dt\");\n    i0.ɵɵtext(35, \"Stake\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"dd\");\n    i0.ɵɵelement(37, \"input\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"dd\");\n    i0.ɵɵelement(39, \"input\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"dd\");\n    i0.ɵɵelement(41, \"input\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(42, \"dd\");\n    i0.ɵɵelement(43, \"input\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"dd\");\n    i0.ɵɵelement(45, \"input\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"dd\");\n    i0.ɵɵelement(47, \"input\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"dd\");\n    i0.ɵɵelement(49, \"input\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"dd\");\n    i0.ɵɵelement(51, \"input\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"dd\", 22);\n    i0.ɵɵelementStart(53, \"a\", 35);\n    i0.ɵɵlistener(\"click\", function SettingPopComponent_ng_container_8_Template_a_click_53_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.StakeSettingForm.valid ? ctx_r4.SaveBetStakeSetting() : \"\";\n    });\n    i0.ɵɵtext(54, \"OK\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r0.f.stake1.value);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.f.stake2.value);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.f.stake3.value);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.f.stake4.value);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.f.stake5.value);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.f.stake6.value);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.f.stake7.value);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.f.stake7.value);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.StakeSettingForm);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"disable\": a0\n  };\n};\n\nexport let SettingPopComponent = /*#__PURE__*/(() => {\n  class SettingPopComponent {\n    constructor(shareService, settingService, fb, tokenService, toastr) {\n      this.shareService = shareService;\n      this.settingService = settingService;\n      this.fb = fb;\n      this.tokenService = tokenService;\n      this.toastr = toastr;\n      this.isStakeEdited = false;\n      this.isToggle = true;\n    }\n\n    ngOnInit() {\n      this.GetBetStakeSetting();\n    }\n\n    initStakeSettingForm(data) {\n      this.StakeSettingForm = this.fb.group({\n        stake1: [data.stake1, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.maxLength(10)]],\n        stake2: [data.stake2, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.maxLength(10)]],\n        stake3: [data.stake3, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.maxLength(10)]],\n        stake4: [data.stake4, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.maxLength(10)]],\n        stake5: [data.stake5, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.maxLength(10)]],\n        stake6: [data.stake6, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.maxLength(10)]],\n        stake7: [data.stake7, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.maxLength(10)]],\n        stake8: [data.stake8, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.maxLength(10)]],\n        stake9: [data.stake9, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.maxLength(10)]],\n        stake10: [data.stake10, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.maxLength(10)]],\n        stake11: [data.stake11, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.maxLength(10)]],\n        stake12: [data.stake12, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.maxLength(10)]]\n      });\n    }\n\n    get f() {\n      return this.StakeSettingForm.controls;\n    }\n\n    GetBetStakeSetting() {\n      this.BetStakeSubscription = this.shareService.stakeButton$.subscribe(data => {\n        if (data != null) {\n          this.stakeSettingData = {};\n          data.forEach((element, index) => {\n            this.stakeSettingData['stake' + (index + 1)] = element;\n          }); // console.log(this.stakeSettingData)\n\n          this.initStakeSettingForm(this.stakeSettingData);\n        }\n      });\n    }\n\n    SaveBetStakeSetting() {\n      // console.log(this.StakeSettingForm)\n      if (!this.StakeSettingForm.valid) {\n        return;\n      }\n\n      let stakeArray = [];\n\n      for (let i = 1; i <= 12; i++) {\n        stakeArray.push(parseInt(this.StakeSettingForm.value['stake' + i]));\n      }\n\n      this.settingService.stakeSetting(stakeArray.toString()).subscribe(resp => {\n        if (resp.errorCode == 0) {\n          let accountInfo = this.tokenService.getUserInfo();\n\n          if (accountInfo.stakeSetting) {\n            accountInfo.stakeSetting = stakeArray.toString();\n          }\n\n          this.shareService.shareStakeButton(stakeArray);\n          this.tokenService.setUserInfo(accountInfo);\n          this.toastr.successMsg('Stake value saved');\n          this.settingClose();\n        } else {\n          this.toastr.errorMsg('Something went wrong');\n        }\n      }, err => {//this.toastr.error(\"Error Occured\");\n      });\n    }\n\n    editStake() {\n      $('#stakeSet').css('display', 'none');\n      $('#editCustomizeStakeList').css('display', 'block');\n      this.isStakeEdited = true;\n    }\n\n    editStakeClosed() {\n      $('#editCustomizeStakeList').css('display', 'none');\n      $('#stakeSet').css('display', 'block');\n      this.isStakeEdited = false;\n    }\n\n    settingClose() {\n      $('#editCustomizeStakeList').css('display', 'none');\n      $('#stakeSet').css('display', 'block');\n      this.initStakeSettingForm(this.stakeSettingData);\n      var s = $(\"#set_pop\"); // s.fadeOut();\n\n      s.css(\"display\", \"none\");\n      this.isStakeEdited = false;\n    }\n\n    ngOnDestroy() {\n      if (this.BetStakeSubscription) {\n        this.BetStakeSubscription.unsubscribe();\n      }\n    }\n\n  }\n\n  SettingPopComponent.ɵfac = function SettingPopComponent_Factory(t) {\n    return new (t || SettingPopComponent)(i0.ɵɵdirectiveInject(i1.ShareDataService), i0.ɵɵdirectiveInject(i2.ClientApiService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.TokenService), i0.ɵɵdirectiveInject(i5.ToastMessageService));\n  };\n\n  SettingPopComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SettingPopComponent,\n    selectors: [[\"app-setting-pop\"]],\n    decls: 23,\n    vars: 7,\n    consts: [[\"id\", \"set_pop\", 1, \"slip_set-pop\", 2, \"display\", \"none\"], [\"id\", \"coinList\", 1, \"set-content\"], [1, \"odds-set\"], [1, \"col-defult\"], [\"for\", \"defult_stake\"], [\"id\", \"userCoin\", \"type\", \"text\", \"maxlength\", \"7\", \"value\", \"\", \"numberOnly\", \"\", 1, \"stake-input\"], [4, \"ngIf\"], [\"id\", \"enableSparkCheck\", \"type\", \"checkbox\"], [\"for\", \"enableSparkCheck\"], [1, \"btn-wrap\"], [\"id\", \"closeSet\", 1, \"btn\", 2, \"cursor\", \"pointer\", 3, \"ngClass\", \"click\"], [1, \"col-send\"], [\"id\", \"coinSave\", 1, \"btn-send\", 2, \"cursor\", \"pointer\", 3, \"ngClass\", \"click\"], [\"id\", \"stakeSet\", 1, \"stake-set\"], [\"id\", \"coin_1\", 1, \"btn\", \"select\", 2, \"cursor\", \"pointer\"], [\"id\", \"coin_2\", 1, \"btn\", \"select\", 2, \"cursor\", \"pointer\"], [\"id\", \"coin_3\", 1, \"btn\", \"select\", 2, \"cursor\", \"pointer\"], [\"id\", \"coin_4\", 1, \"btn\", \"select\", 2, \"cursor\", \"pointer\"], [\"id\", \"coin_5\", 1, \"btn\", \"select\", 2, \"cursor\", \"pointer\"], [\"id\", \"coin_6\", 1, \"btn\", \"select\", 2, \"cursor\", \"pointer\"], [\"id\", \"coin_7\", 1, \"btn\", 2, \"cursor\", \"pointer\"], [\"id\", \"coin_8\", 1, \"btn\", 2, \"cursor\", \"pointer\"], [1, \"col-edit\"], [\"id\", \"edit\", 1, \"btn-edit\", 3, \"click\"], [\"src\", \"https://b2c.static112233.com/assets/images/transparent.gif\"], [3, \"formGroup\", \"ngSubmit\"], [\"id\", \"editCustomizeStakeList\", 1, \"stake-set\", 2, \"display\", \"none\"], [\"id\", \"stakeEdit_1\", \"numberOnly\", \"\", \"type\", \"text\", \"value\", \"\", \"maxlength\", \"7\", \"formControlName\", \"stake1\", 1, \"stake_edit-input\"], [\"id\", \"stakeEdit_2\", \"numberOnly\", \"\", \"type\", \"text\", \"value\", \"\", \"maxlength\", \"7\", \"formControlName\", \"stake2\", 1, \"stake_edit-input\"], [\"id\", \"stakeEdit_3\", \"numberOnly\", \"\", \"type\", \"text\", \"value\", \"\", \"maxlength\", \"7\", \"formControlName\", \"stake3\", 1, \"stake_edit-input\"], [\"id\", \"stakeEdit_4\", \"numberOnly\", \"\", \"type\", \"text\", \"value\", \"\", \"maxlength\", \"7\", \"formControlName\", \"stake4\", 1, \"stake_edit-input\"], [\"id\", \"stakeEdit_5\", \"numberOnly\", \"\", \"type\", \"text\", \"value\", \"\", \"maxlength\", \"7\", \"formControlName\", \"stake5\", 1, \"stake_edit-input\"], [\"id\", \"stakeEdit_6\", \"numberOnly\", \"\", \"type\", \"text\", \"value\", \"\", \"maxlength\", \"7\", \"formControlName\", \"stake6\", 1, \"stake_edit-input\"], [\"id\", \"stakeEdit_7\", \"numberOnly\", \"\", \"type\", \"text\", \"value\", \"\", \"maxlength\", \"7\", \"formControlName\", \"stake7\", 1, \"stake_edit-input\"], [\"id\", \"stakeEdit_8\", \"numberOnly\", \"\", \"type\", \"text\", \"value\", \"\", \"maxlength\", \"7\", \"formControlName\", \"stake8\", 1, \"stake_edit-input\"], [\"id\", \"ok\", 1, \"btn-send\", 3, \"click\"]],\n    template: function SettingPopComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"dl\", 2);\n        i0.ɵɵelementStart(3, \"dd\", 3);\n        i0.ɵɵelementStart(4, \"label\", 4);\n        i0.ɵɵelementStart(5, \"strong\");\n        i0.ɵɵtext(6, \"Default stake\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, SettingPopComponent_ng_container_8_Template, 55, 9, \"ng-container\", 6);\n        i0.ɵɵelementStart(9, \"dl\", 2);\n        i0.ɵɵelementStart(10, \"dt\");\n        i0.ɵɵtext(11, \"Odds\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"dd\");\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵelementStart(14, \"label\", 8);\n        i0.ɵɵtext(15, \"Highlight when odds change\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"ul\", 9);\n        i0.ɵɵelementStart(17, \"li\");\n        i0.ɵɵelementStart(18, \"a\", 10);\n        i0.ɵɵlistener(\"click\", function SettingPopComponent_Template_a_click_18_listener() {\n          return ctx.isStakeEdited ? \"\" : ctx.settingClose();\n        });\n        i0.ɵɵtext(19, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"li\", 11);\n        i0.ɵɵelementStart(21, \"a\", 12);\n        i0.ɵɵlistener(\"click\", function SettingPopComponent_Template_a_click_21_listener() {\n          return ctx.isStakeEdited ? \"\" : ctx.settingClose();\n        });\n        i0.ɵɵtext(22, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.stakeSettingData);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ctx.isStakeEdited));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.isStakeEdited));\n      }\n    },\n    directives: [i6.NumberOnlyDirective, i7.NgIf, i7.NgClass, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.MaxLengthValidator, i3.NgControlStatus, i3.FormControlName],\n    styles: [\"\"]\n  });\n  return SettingPopComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}