{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Ahmed Kazdar/OneDrive/Desktop/Cricity Bet/WebBet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { GoogleAuthProvider, FacebookAuthProvider } from 'firebase/auth';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ng-recaptcha\";\nimport * as i3 from \"@angular/fire/compat/auth\";\nimport * as i4 from \"../services/token.service\";\nimport * as i5 from \"ngx-toastr\";\nimport * as i6 from \"@angular/fire/compat/database\";\nimport * as i7 from \"../services/login.service\";\nimport * as i8 from \"../services/client-api.service\";\nexport class AuthService {\n  constructor(http, recaptchaV3Service, fireAuth, tokenService, toastr, db, loginService, clientApi) {\n    this.http = http;\n    this.recaptchaV3Service = recaptchaV3Service;\n    this.fireAuth = fireAuth;\n    this.tokenService = tokenService;\n    this.toastr = toastr;\n    this.db = db;\n    this.loginService = loginService;\n    this.clientApi = clientApi;\n    this.isAffiliate = environment.isAffiliate;\n    this.siteName = environment.siteName;\n    this.fireAuth.authState.subscribe(user => {\n      if (user) {\n        console.log(user.email);\n      } else {\n        localStorage.setItem('user', 'null');\n        JSON.parse(localStorage.getItem('user'));\n      }\n    }); // Fetch b2cID from API\n\n    this.clientApi.getb2cid().subscribe(resp => {\n      if (resp) {\n        this.b2cID = resp.result[0].b2cID;\n      }\n    });\n  }\n\n  get isLoggedIn() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return user !== null && user.emailVerified !== false ? true : false;\n  }\n\n  GoogleAuth(type) {\n    return this.AuthLogin(new GoogleAuthProvider(), type);\n  }\n\n  FacebookAuth(type) {\n    return this.AuthLogin(new FacebookAuthProvider(), type);\n  }\n\n  SignOut() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.fireAuth.signOut().then(() => {\n        localStorage.removeItem('user');\n      });\n    })();\n  }\n\n  SetUserData(user) {\n    this.db.database.ref('users').child(user.username).set({\n      email: user.email,\n      username: user.username,\n      password: user.password,\n      dob: user.dob,\n      phoneno: user.phoneno,\n      currency: user.currency\n    });\n  }\n\n  SignUp(userData) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const result = yield _this2.fireAuth.createUserWithEmailAndPassword(userData.email, userData.password);\n\n        if (result.user) {\n          userData.firebaseId = result.user.uid;\n\n          _this2.loginService.register(userData).subscribe(resp => {\n            if (resp.errorCode === 0) {\n              _this2.SendVerificationMail();\n\n              if (_this2.isAffiliate && _this2.tokenService.getClickID() != 'undefined' && _this2.tokenService.getClickID() != null) {\n                let affData = {\n                  user_id: resp.result[0].userId,\n                  click_id: _this2.tokenService.getClickID(),\n                  aff_id: _this2.tokenService.getAffId(),\n                  offer_id: _this2.tokenService.getOfferId(),\n                  siteName: _this2.siteName\n                };\n\n                _this2.loginService.addAffUser(affData).subscribe(resp => {});\n              }\n            } else {\n              _this2.toastr.error(resp.errorDescription);\n\n              $(\"#registerBox\").fadeOut();\n            }\n\n            $('#register_loading').css('display', 'none');\n          }, err => {\n            $(\"#registerBox\").fadeOut();\n            $('#register_loading').css('display', 'none');\n          });\n        }\n      } catch (e) {\n        if (e.code == 'auth/account-exists-with-different-credential' || e.code == 'auth/email-already-in-use') {\n          _this2.toastr.error(\"Email already in use by another account\");\n        }\n      }\n    })();\n  }\n\n  SignInWithEmail(userData, type) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const result = yield _this3.fireAuth.signInWithEmailAndPassword(userData.userName, userData.password);\n\n        if (result.user) {\n          if (result.user.emailVerified) {\n            _this3.loginService.login(userData).subscribe(resp => {\n              if (resp.errorCode === 0) {\n                _this3.tokenService.setToken(resp.result[0].token);\n\n                _this3.tokenService.setUserInfo(resp.result[0]); // this.router.navigate(['highlight']);\n                // window.location.href = \"home\";\n\n\n                window.location.href = window.location.origin + window.location.pathname;\n              } else {\n                if (!resp.errorDescription) {\n                  resp.errorDescription = \"Username or password is wrong\";\n                }\n\n                _this3.toastr.error(resp.errorDescription);\n              }\n\n              if (type == 0) {\n                $('#page_loading').css('display', 'none');\n              } else {\n                $('#login_loading').css('display', 'none');\n                $(\"#loginBox\").fadeOut();\n              }\n            });\n          } else {\n            if (type == 0) {\n              $('#page_loading').css('display', 'none');\n            } else {\n              $('#login_loading').css('display', 'none');\n              $(\"#loginBox\").fadeOut();\n            }\n\n            _this3.toastr.error(\"Email Address is not Verified\");\n\n            _this3.SignOut();\n          }\n        }\n      } catch (e) {\n        if (e.code == 'auth/user-not-found') {\n          _this3.toastr.error(\"User Not Found\");\n        }\n\n        if (e.code == 'auth/wrong-password') {\n          _this3.toastr.error(\"Invalid Password\");\n        }\n      }\n    })();\n  }\n\n  SendVerificationMail() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this4.fireAuth.currentUser.then(user => {\n        return user.sendEmailVerification();\n      }).then(() => {\n        $(\"#registerBox\").fadeOut();\n        $(\"#verifyEmail\").fadeIn();\n      });\n    })();\n  }\n\n  AuthLogin(provider, type) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const result = yield _this5.fireAuth.signInWithPopup(provider);\n        provider.addScope('https://www.googleapis.com/auth/user.birthday.read');\n\n        if (type == 0) {\n          _this5.RegisterWithSocial(result.user, 0);\n        } else {\n          _this5.Login(result.user);\n        }\n      } catch (e) {\n        if (e.code == 'auth/account-exists-with-different-credential') {\n          var email = e.email;\n          var pendingCredential = e.credential;\n\n          _this5.fireAuth.fetchSignInMethodsForEmail(email).then(methods => {\n            if (methods[0] === 'password') {\n              // var password = promptUserForPassword(); // TODO: implement promptUserForPassword.\n              _this5.fireAuth.signInWithEmailAndPassword(email, 'password').then(result_2 => {\n                // Step 4a.\n                result_2.user.linkWithCredential(pendingCredential);\n\n                _this5.Login(result_2.user);\n              });\n\n              return;\n            }\n\n            if (methods[0] === 'google.com') {\n              _this5.toastr.error('You already have an account with the selected email address.');\n\n              _this5.fireAuth.signInWithPopup(new GoogleAuthProvider()).then(result => {\n                result.user.linkAndRetrieveDataWithCredential(pendingCredential);\n\n                _this5.Login(result.user);\n              });\n\n              return;\n            }\n\n            if (methods[0] === 'facebook.com') {\n              _this5.toastr.error('You already have an account with the selected email address.');\n\n              _this5.fireAuth.signInWithPopup(new FacebookAuthProvider()).then(result => {\n                result.user.linkAndRetrieveDataWithCredential(pendingCredential);\n\n                _this5.Login(result.user);\n              });\n\n              return;\n            }\n          });\n        }\n      }\n    })();\n  }\n\n  RegisterWithSocial(user, type) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      // If b2cID is not provided, use the class property\n      let userData = {\n        firstName: user.displayName != null ? user.displayName.split(' ')[0] : \"\",\n        lastName: user.displayName != null ? user.displayName.split(' ')[1] : \"\",\n        userName: \"\",\n        password: \"\",\n        currencyCode: environment.currency,\n        email: user.email != null ? user.email : \"\",\n        phoneNumber: user.phoneNumber == null ? \"\" : user.phoneNumber,\n        address: \"\",\n        birthDate: user.birthDate != null ? user.birthDate : \"\",\n        firebaseId: user.uid,\n        blocChain: \"\",\n        b2cID: \"10000101\",\n        domain: environment.origin,\n        isb2c: 1\n      };\n      console.log(userData);\n\n      _this6.loginService.register(userData).subscribe(resp => {\n        console.log(resp);\n\n        if (resp.errorCode === 0) {\n          if (type == 0) {\n            if (_this6.isAffiliate && _this6.tokenService.getClickID() != null && _this6.tokenService.getClickID() != 'undefined') {\n              let affData = {\n                user_id: resp.result[0].userId,\n                click_id: _this6.tokenService.getClickID(),\n                aff_id: _this6.tokenService.getAffId(),\n                offer_id: _this6.tokenService.getOfferId(),\n                siteName: _this6.siteName\n              };\n\n              _this6.sendAffData(affData, resp);\n            } else {\n              if (user.email != null || user.email == \"\") {\n                let data = {\n                  \"email\": user.email,\n                  \"siteName\": environment.siteName,\n                  \"domain\": environment.domain\n                };\n\n                _this6.loginService.sendWelcomeMail(data).subscribe(resp => {\n                  console.log(resp.status);\n                });\n              }\n\n              _this6.toastr.success('Registered Successfully');\n\n              _this6.tokenService.setToken(resp.result[0].token);\n\n              _this6.tokenService.setUserInfo(resp.result[0]);\n\n              window.location.href = window.location.origin + window.location.pathname;\n            }\n          }\n        } else {\n          _this6.toastr.error(resp.errorDescription);\n        }\n      }, err => {\n        console.log(err);\n      });\n    })();\n  }\n\n  sendAffData(affData, result) {\n    this.loginService.addAffUser(affData).subscribe(resp => {\n      if (resp.status === \"Success\") {\n        this.toastr.success('Registered Successfully');\n        this.tokenService.setToken(result.result[0].token);\n        this.tokenService.setUserInfo(result.result[0]);\n        window.location.href = window.location.origin + window.location.pathname;\n      } else {\n        this.toastr.error(resp.message);\n        console.log(resp);\n      }\n    }, error => {\n      this.toastr.error(error);\n      console.log(error);\n    });\n  } // sendAffData(affData:any){\n  //   this.loginService.addAffUser(affData).subscribe((resp: any)=>{\n  //     if (resp.status !='Success') {\n  //       this.sendAffData(affData);\n  //     }\n  //   })\n  // }\n\n\n  Login(user) {\n    let body = {\n      userName: user.username != null ? user.username : \"\",\n      password: user.password != null ? user.password : \"\",\n      firebaseId: user.uid,\n      captcha: '0000',\n      log: '0000',\n      origin: environment.origin\n    };\n    this.recaptchaV3Service.execute('importantAction').subscribe(token => {\n      if (token != null || token != \"\") {\n        this.loginService.login(body).subscribe(resp => {\n          console.log(resp);\n\n          if (resp.errorCode === 0) {\n            this.toastr.success(\"Login Successfully\");\n            this.tokenService.setToken(resp.result[0].token);\n            this.tokenService.setUserInfo(resp.result[0]);\n            window.location.href = window.location.origin + window.location.pathname;\n          } else {\n            if (resp.errorDescription === \"User Not Found.\") {\n              this.RegisterWithSocial(user, 0);\n            }\n          }\n        }, err => {\n          console.log(err);\n        });\n      }\n    });\n  }\n\n  phoneLogin(phoneNumber, appVerifier) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      _this7.fireAuth.signInWithPhoneNumber(phoneNumber, appVerifier).then(result => {\n        console.log(result.confirm);\n\n        if (result.confirm) {\n          _this7.toastr.success('OTP has been sent. Please check your phone.');\n\n          $('#phone_loading').css('display', 'none');\n          _this7.confirmationResult = result;\n        }\n      }).catch(error => console.log(error));\n    })();\n  } //  async otpSubmit(code:any,type:any,pass:any,dob:any){\n  //   this.confirmationResult.confirm(code).then(async (result) => {\n  //    await this.RegisterWithSocial(result.user,0);\n  //    $('#page_loading').css('display', 'none');\n  //   }).catch((error) => {\n  //     this.toastr.error('Something Went Wrong')\n  //     $('#phone_loading').css('display', 'none');\n  //     console.log(error);\n  //   });\n  //  }\n\n\n  otpSubmit(code, type, pass, dob) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      _this8.confirmationResult.confirm(code).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (result) {\n          if (type == 0) {\n            let userData = {\n              firstName: result.user.displayName != null ? result.user.displayName.split(' ')[0] : \"\",\n              lastName: result.user.displayName != null ? result.user.displayName.split(' ')[1] : \"\",\n              userName: \"\",\n              password: type == 0 ? pass : \"\",\n              currencyCode: environment.currency,\n              email: \"\",\n              phoneNumber: result.user.phoneNumber == null ? \"\" : result.user.phoneNumber,\n              address: \"\",\n              birthDate: type == 0 ? dob : result.user.birthDate != null ? result.user.birthDate : \"\",\n              firebaseId: result.user.uid,\n              blocChain: \"\",\n              domain: environment.origin,\n              isb2c: 1\n            };\n            console.log(userData);\n\n            _this8.loginService.register(userData).subscribe(resp => {\n              console.log(resp);\n\n              if (resp.errorCode === 0) {\n                if (_this8.isAffiliate && _this8.tokenService.getClickID() != null && _this8.tokenService.getClickID() != 'undefined') {\n                  let affData = {\n                    user_id: resp.result[0].userId,\n                    click_id: _this8.tokenService.getClickID(),\n                    aff_id: _this8.tokenService.getAffId(),\n                    offer_id: _this8.tokenService.getOfferId(),\n                    siteName: _this8.siteName\n                  };\n\n                  _this8.sendAffData(affData, resp);\n                } else {\n                  _this8.toastr.success('Registered Successfully');\n\n                  _this8.tokenService.setToken(resp.result[0].token);\n\n                  _this8.tokenService.setUserInfo(resp.result[0]);\n\n                  window.location.href = window.location.origin + window.location.pathname;\n                }\n              } else {\n                _this8.SignOut();\n\n                _this8.toastr.error(resp.errorDescription);\n              }\n\n              $('#login_loading').css('display', 'none');\n            }, err => {\n              _this8.SignOut();\n\n              console.log(err);\n            });\n          } else {\n            _this8.Login(result.user);\n          }\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(error => {\n        _this8.toastr.error('Something Went Wrong');\n\n        $('#login_loading').css('display', 'none');\n        console.log(error);\n      });\n    })();\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ReCaptchaV3Service), i0.ɵɵinject(i3.AngularFireAuth), i0.ɵɵinject(i4.TokenService), i0.ɵɵinject(i5.ToastrService), i0.ɵɵinject(i6.AngularFireDatabase), i0.ɵɵinject(i7.LoginService), i0.ɵɵinject(i8.ClientApiService));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/Ahmed Kazdar/OneDrive/Desktop/Cricity Bet/WebBet/src/app/socialshared/auth.service.ts"],"names":["GoogleAuthProvider","FacebookAuthProvider","environment","i0","i1","i2","i3","i4","i5","i6","i7","i8","AuthService","constructor","http","recaptchaV3Service","fireAuth","tokenService","toastr","db","loginService","clientApi","isAffiliate","siteName","authState","subscribe","user","console","log","email","localStorage","setItem","JSON","parse","getItem","getb2cid","resp","b2cID","result","isLoggedIn","emailVerified","GoogleAuth","type","AuthLogin","FacebookAuth","SignOut","signOut","then","removeItem","SetUserData","database","ref","child","username","set","password","dob","phoneno","currency","SignUp","userData","createUserWithEmailAndPassword","firebaseId","uid","register","errorCode","SendVerificationMail","getClickID","affData","user_id","userId","click_id","aff_id","getAffId","offer_id","getOfferId","addAffUser","error","errorDescription","$","fadeOut","css","err","e","code","SignInWithEmail","signInWithEmailAndPassword","userName","login","setToken","token","setUserInfo","window","location","href","origin","pathname","currentUser","sendEmailVerification","fadeIn","provider","signInWithPopup","addScope","RegisterWithSocial","Login","pendingCredential","credential","fetchSignInMethodsForEmail","methods","result_2","linkWithCredential","linkAndRetrieveDataWithCredential","firstName","displayName","split","lastName","currencyCode","phoneNumber","address","birthDate","blocChain","domain","isb2c","sendAffData","data","sendWelcomeMail","status","success","message","body","captcha","execute","phoneLogin","appVerifier","signInWithPhoneNumber","confirm","confirmationResult","catch","otpSubmit","pass","ɵfac","AuthService_Factory","t","ɵɵinject","HttpClient","ReCaptchaV3Service","AngularFireAuth","TokenService","ToastrService","AngularFireDatabase","LoginService","ClientApiService","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":"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","sourcesContent":["import { GoogleAuthProvider, FacebookAuthProvider } from 'firebase/auth';\r\nimport { environment } from 'src/environments/environment';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nimport * as i2 from \"ng-recaptcha\";\r\nimport * as i3 from \"@angular/fire/compat/auth\";\r\nimport * as i4 from \"../services/token.service\";\r\nimport * as i5 from \"ngx-toastr\";\r\nimport * as i6 from \"@angular/fire/compat/database\";\r\nimport * as i7 from \"../services/login.service\";\r\nimport * as i8 from \"../services/client-api.service\";\r\nexport class AuthService {\r\n    constructor(http, recaptchaV3Service, fireAuth, tokenService, toastr, db, loginService, clientApi) {\r\n        this.http = http;\r\n        this.recaptchaV3Service = recaptchaV3Service;\r\n        this.fireAuth = fireAuth;\r\n        this.tokenService = tokenService;\r\n        this.toastr = toastr;\r\n        this.db = db;\r\n        this.loginService = loginService;\r\n        this.clientApi = clientApi;\r\n        this.isAffiliate = environment.isAffiliate;\r\n        this.siteName = environment.siteName;\r\n        this.fireAuth.authState.subscribe(user => {\r\n            if (user) {\r\n                console.log(user.email);\r\n            }\r\n            else {\r\n                localStorage.setItem('user', 'null');\r\n                JSON.parse(localStorage.getItem('user'));\r\n            }\r\n        });\r\n        // Fetch b2cID from API\r\n        this.clientApi.getb2cid().subscribe((resp) => {\r\n            if (resp) {\r\n                this.b2cID = resp.result[0].b2cID;\r\n            }\r\n        });\r\n    }\r\n    get isLoggedIn() {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        return user !== null && user.emailVerified !== false ? true : false;\r\n    }\r\n    GoogleAuth(type) {\r\n        return this.AuthLogin(new GoogleAuthProvider(), type);\r\n    }\r\n    FacebookAuth(type) {\r\n        return this.AuthLogin(new FacebookAuthProvider(), type);\r\n    }\r\n    async SignOut() {\r\n        await this.fireAuth.signOut().then(() => {\r\n            localStorage.removeItem('user');\r\n        });\r\n    }\r\n    SetUserData(user) {\r\n        this.db.database.ref('users').child(user.username).set({\r\n            email: user.email,\r\n            username: user.username,\r\n            password: user.password,\r\n            dob: user.dob,\r\n            phoneno: user.phoneno,\r\n            currency: user.currency\r\n        });\r\n    }\r\n    async SignUp(userData) {\r\n        try {\r\n            const result = await this.fireAuth.createUserWithEmailAndPassword(userData.email, userData.password);\r\n            if (result.user) {\r\n                userData.firebaseId = result.user.uid;\r\n                this.loginService\r\n                    .register(userData)\r\n                    .subscribe((resp) => {\r\n                    if (resp.errorCode === 0) {\r\n                        this.SendVerificationMail();\r\n                        if (this.isAffiliate && this.tokenService.getClickID() != 'undefined' && this.tokenService.getClickID() != null) {\r\n                            let affData = {\r\n                                user_id: resp.result[0].userId,\r\n                                click_id: this.tokenService.getClickID(),\r\n                                aff_id: this.tokenService.getAffId(),\r\n                                offer_id: this.tokenService.getOfferId(),\r\n                                siteName: this.siteName\r\n                            };\r\n                            this.loginService.addAffUser(affData).subscribe((resp) => {\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.toastr.error(resp.errorDescription);\r\n                        $(\"#registerBox\").fadeOut();\r\n                    }\r\n                    $('#register_loading').css('display', 'none');\r\n                }, err => {\r\n                    $(\"#registerBox\").fadeOut();\r\n                    $('#register_loading').css('display', 'none');\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (e.code == 'auth/account-exists-with-different-credential' || e.code == 'auth/email-already-in-use') {\r\n                this.toastr.error(\"Email already in use by another account\");\r\n            }\r\n        }\r\n    }\r\n    async SignInWithEmail(userData, type) {\r\n        try {\r\n            const result = await this.fireAuth.signInWithEmailAndPassword(userData.userName, userData.password);\r\n            if (result.user) {\r\n                if (result.user.emailVerified) {\r\n                    this.loginService\r\n                        .login(userData)\r\n                        .subscribe((resp) => {\r\n                        if (resp.errorCode === 0) {\r\n                            this.tokenService.setToken(resp.result[0].token);\r\n                            this.tokenService.setUserInfo(resp.result[0]);\r\n                            // this.router.navigate(['highlight']);\r\n                            // window.location.href = \"home\";\r\n                            window.location.href = window.location.origin + window.location.pathname;\r\n                        }\r\n                        else {\r\n                            if (!resp.errorDescription) {\r\n                                resp.errorDescription = \"Username or password is wrong\";\r\n                            }\r\n                            this.toastr.error(resp.errorDescription);\r\n                        }\r\n                        if (type == 0) {\r\n                            $('#page_loading').css('display', 'none');\r\n                        }\r\n                        else {\r\n                            $('#login_loading').css('display', 'none');\r\n                            $(\"#loginBox\").fadeOut();\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    if (type == 0) {\r\n                        $('#page_loading').css('display', 'none');\r\n                    }\r\n                    else {\r\n                        $('#login_loading').css('display', 'none');\r\n                        $(\"#loginBox\").fadeOut();\r\n                    }\r\n                    this.toastr.error(\"Email Address is not Verified\");\r\n                    this.SignOut();\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (e.code == 'auth/user-not-found') {\r\n                this.toastr.error(\"User Not Found\");\r\n            }\r\n            if (e.code == 'auth/wrong-password') {\r\n                this.toastr.error(\"Invalid Password\");\r\n            }\r\n        }\r\n    }\r\n    async SendVerificationMail() {\r\n        return this.fireAuth.currentUser\r\n            .then((user) => {\r\n            return user.sendEmailVerification();\r\n        })\r\n            .then(() => {\r\n            $(\"#registerBox\").fadeOut();\r\n            $(\"#verifyEmail\").fadeIn();\r\n        });\r\n    }\r\n    async AuthLogin(provider, type) {\r\n        try {\r\n            const result = await this.fireAuth.signInWithPopup(provider);\r\n            provider.addScope('https://www.googleapis.com/auth/user.birthday.read');\r\n            if (type == 0) {\r\n                this.RegisterWithSocial(result.user, 0);\r\n            }\r\n            else {\r\n                this.Login(result.user);\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (e.code == 'auth/account-exists-with-different-credential') {\r\n                var email = e.email;\r\n                var pendingCredential = e.credential;\r\n                this.fireAuth.fetchSignInMethodsForEmail(email).then((methods) => {\r\n                    if (methods[0] === 'password') {\r\n                        // var password = promptUserForPassword(); // TODO: implement promptUserForPassword.\r\n                        this.fireAuth.signInWithEmailAndPassword(email, 'password').then((result_2) => {\r\n                            // Step 4a.\r\n                            result_2.user.linkWithCredential(pendingCredential);\r\n                            this.Login(result_2.user);\r\n                        });\r\n                        return;\r\n                    }\r\n                    if (methods[0] === 'google.com') {\r\n                        this.toastr.error('You already have an account with the selected email address.');\r\n                        this.fireAuth.signInWithPopup(new GoogleAuthProvider()).then((result) => {\r\n                            result.user.linkAndRetrieveDataWithCredential(pendingCredential);\r\n                            this.Login(result.user);\r\n                        });\r\n                        return;\r\n                    }\r\n                    if (methods[0] === 'facebook.com') {\r\n                        this.toastr.error('You already have an account with the selected email address.');\r\n                        this.fireAuth.signInWithPopup(new FacebookAuthProvider()).then((result) => {\r\n                            result.user.linkAndRetrieveDataWithCredential(pendingCredential);\r\n                            this.Login(result.user);\r\n                        });\r\n                        return;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    async RegisterWithSocial(user, type) {\r\n        // If b2cID is not provided, use the class property\r\n        let userData = {\r\n            firstName: user.displayName != null ? user.displayName.split(' ')[0] : \"\",\r\n            lastName: user.displayName != null ? user.displayName.split(' ')[1] : \"\",\r\n            userName: \"\",\r\n            password: \"\",\r\n            currencyCode: environment.currency,\r\n            email: user.email != null ? user.email : \"\",\r\n            phoneNumber: user.phoneNumber == null ? \"\" : user.phoneNumber,\r\n            address: \"\",\r\n            birthDate: user.birthDate != null ? user.birthDate : \"\",\r\n            firebaseId: user.uid,\r\n            blocChain: \"\",\r\n            b2cID: \"10000101\",\r\n            domain: environment.origin,\r\n            isb2c: 1\r\n        };\r\n        console.log(userData);\r\n        this.loginService.register(userData).subscribe((resp) => {\r\n            console.log(resp);\r\n            if (resp.errorCode === 0) {\r\n                if (type == 0) {\r\n                    if (this.isAffiliate && this.tokenService.getClickID() != null && this.tokenService.getClickID() != 'undefined') {\r\n                        let affData = {\r\n                            user_id: resp.result[0].userId,\r\n                            click_id: this.tokenService.getClickID(),\r\n                            aff_id: this.tokenService.getAffId(),\r\n                            offer_id: this.tokenService.getOfferId(),\r\n                            siteName: this.siteName\r\n                        };\r\n                        this.sendAffData(affData, resp);\r\n                    }\r\n                    else {\r\n                        if (user.email != null || user.email == \"\") {\r\n                            let data = { \"email\": user.email, \"siteName\": environment.siteName, \"domain\": environment.domain };\r\n                            this.loginService.sendWelcomeMail(data).subscribe((resp) => { console.log(resp.status); });\r\n                        }\r\n                        this.toastr.success('Registered Successfully');\r\n                        this.tokenService.setToken(resp.result[0].token);\r\n                        this.tokenService.setUserInfo(resp.result[0]);\r\n                        window.location.href = window.location.origin + window.location.pathname;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.toastr.error(resp.errorDescription);\r\n            }\r\n        }, err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    sendAffData(affData, result) {\r\n        this.loginService.addAffUser(affData).subscribe((resp) => {\r\n            if (resp.status === \"Success\") {\r\n                this.toastr.success('Registered Successfully');\r\n                this.tokenService.setToken(result.result[0].token);\r\n                this.tokenService.setUserInfo(result.result[0]);\r\n                window.location.href = window.location.origin + window.location.pathname;\r\n            }\r\n            else {\r\n                this.toastr.error(resp.message);\r\n                console.log(resp);\r\n            }\r\n        }, (error) => {\r\n            this.toastr.error(error);\r\n            console.log(error);\r\n        });\r\n    }\r\n    // sendAffData(affData:any){\r\n    //   this.loginService.addAffUser(affData).subscribe((resp: any)=>{\r\n    //     if (resp.status !='Success') {\r\n    //       this.sendAffData(affData);\r\n    //     }\r\n    //   })\r\n    // }\r\n    Login(user) {\r\n        let body = {\r\n            userName: user.username != null ? user.username : \"\",\r\n            password: user.password != null ? user.password : \"\",\r\n            firebaseId: user.uid,\r\n            captcha: '0000',\r\n            log: '0000',\r\n            origin: environment.origin\r\n        };\r\n        this.recaptchaV3Service.execute('importantAction').subscribe((token) => {\r\n            if (token != null || token != \"\") {\r\n                this.loginService.login(body)\r\n                    .subscribe((resp) => {\r\n                    console.log(resp);\r\n                    if (resp.errorCode === 0) {\r\n                        this.toastr.success(\"Login Successfully\");\r\n                        this.tokenService.setToken(resp.result[0].token);\r\n                        this.tokenService.setUserInfo(resp.result[0]);\r\n                        window.location.href = window.location.origin + window.location.pathname;\r\n                    }\r\n                    else {\r\n                        if (resp.errorDescription === \"User Not Found.\") {\r\n                            this.RegisterWithSocial(user, 0);\r\n                        }\r\n                    }\r\n                }, err => {\r\n                    console.log(err);\r\n                });\r\n            }\r\n        });\r\n    }\r\n    async phoneLogin(phoneNumber, appVerifier) {\r\n        this.fireAuth.signInWithPhoneNumber(phoneNumber, appVerifier)\r\n            .then(result => {\r\n            console.log(result.confirm);\r\n            if (result.confirm) {\r\n                this.toastr.success('OTP has been sent. Please check your phone.');\r\n                $('#phone_loading').css('display', 'none');\r\n                this.confirmationResult = result;\r\n            }\r\n        })\r\n            .catch(error => console.log(error));\r\n    }\r\n    //  async otpSubmit(code:any,type:any,pass:any,dob:any){\r\n    //   this.confirmationResult.confirm(code).then(async (result) => {\r\n    //    await this.RegisterWithSocial(result.user,0);\r\n    //    $('#page_loading').css('display', 'none');\r\n    //   }).catch((error) => {\r\n    //     this.toastr.error('Something Went Wrong')\r\n    //     $('#phone_loading').css('display', 'none');\r\n    //     console.log(error);\r\n    //   });\r\n    //  }\r\n    async otpSubmit(code, type, pass, dob) {\r\n        this.confirmationResult.confirm(code).then(async (result) => {\r\n            if (type == 0) {\r\n                let userData = {\r\n                    firstName: result.user.displayName != null ? result.user.displayName.split(' ')[0] : \"\",\r\n                    lastName: result.user.displayName != null ? result.user.displayName.split(' ')[1] : \"\",\r\n                    userName: \"\",\r\n                    password: type == 0 ? pass : \"\",\r\n                    currencyCode: environment.currency,\r\n                    email: \"\",\r\n                    phoneNumber: result.user.phoneNumber == null ? \"\" : result.user.phoneNumber,\r\n                    address: \"\",\r\n                    birthDate: type == 0 ? dob : result.user.birthDate != null ? result.user.birthDate : \"\",\r\n                    firebaseId: result.user.uid,\r\n                    blocChain: \"\",\r\n                    domain: environment.origin,\r\n                    isb2c: 1\r\n                };\r\n                console.log(userData);\r\n                this.loginService.register(userData).subscribe((resp) => {\r\n                    console.log(resp);\r\n                    if (resp.errorCode === 0) {\r\n                        if (this.isAffiliate && this.tokenService.getClickID() != null && this.tokenService.getClickID() != 'undefined') {\r\n                            let affData = {\r\n                                user_id: resp.result[0].userId,\r\n                                click_id: this.tokenService.getClickID(),\r\n                                aff_id: this.tokenService.getAffId(),\r\n                                offer_id: this.tokenService.getOfferId(),\r\n                                siteName: this.siteName\r\n                            };\r\n                            this.sendAffData(affData, resp);\r\n                        }\r\n                        else {\r\n                            this.toastr.success('Registered Successfully');\r\n                            this.tokenService.setToken(resp.result[0].token);\r\n                            this.tokenService.setUserInfo(resp.result[0]);\r\n                            window.location.href = window.location.origin + window.location.pathname;\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.SignOut();\r\n                        this.toastr.error(resp.errorDescription);\r\n                    }\r\n                    $('#login_loading').css('display', 'none');\r\n                }, err => {\r\n                    this.SignOut();\r\n                    console.log(err);\r\n                });\r\n            }\r\n            else {\r\n                this.Login(result.user);\r\n            }\r\n        }).catch((error) => {\r\n            this.toastr.error('Something Went Wrong');\r\n            $('#login_loading').css('display', 'none');\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\nAuthService.ɵfac = function AuthService_Factory(t) { return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ReCaptchaV3Service), i0.ɵɵinject(i3.AngularFireAuth), i0.ɵɵinject(i4.TokenService), i0.ɵɵinject(i5.ToastrService), i0.ɵɵinject(i6.AngularFireDatabase), i0.ɵɵinject(i7.LoginService), i0.ɵɵinject(i8.ClientApiService)); };\r\nAuthService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthService, factory: AuthService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}