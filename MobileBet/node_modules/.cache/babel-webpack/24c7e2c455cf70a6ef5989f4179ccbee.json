{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/feedback-dispute.service\";\nimport * as i3 from \"ngx-toastr\";\nexport let FeedbackComponent = /*#__PURE__*/(() => {\n  class FeedbackComponent {\n    constructor(fb, fdService, toastr) {\n      this.fb = fb;\n      this.fdService = fdService;\n      this.toastr = toastr;\n      this.feedbackInTransit = false;\n    }\n\n    ngOnInit() {\n      this.initLoginForm();\n      $('#page_loading').css('display', 'none');\n    }\n\n    initLoginForm() {\n      this.FeedbackForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        subject: ['', Validators.required],\n        description: ['', Validators.required],\n        siteName: [environment.siteName],\n        domain: [environment.domain]\n      });\n    }\n\n    submitFeedback() {\n      if (this.FeedbackForm.invalid) {\n        this.toastr.error('Invalid Input');\n      } else {\n        if (this.feedbackInTransit) {\n          return;\n        } else {\n          $('#page_loading').css('display', 'flex');\n          this.feedbackInTransit = true;\n          this.fdService.sendFeedback(this.FeedbackForm.value).subscribe(resp => {\n            if (resp.status === 'Success') {\n              if (resp.message) {\n                this.toastr.success(resp.message);\n                this.FeedbackForm.reset();\n              }\n            } else {\n              if (resp.message) {\n                this.toastr.error(resp.message);\n              }\n            }\n\n            $('#page_loading').css('display', 'none');\n            this.feedbackInTransit = false;\n          }, err => {\n            $('#page_loading').css('display', 'none');\n            console.log(err);\n          });\n        }\n      }\n    }\n\n  }\n\n  FeedbackComponent.ɵfac = function FeedbackComponent_Factory(t) {\n    return new (t || FeedbackComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FeedbackDisputeService), i0.ɵɵdirectiveInject(i3.ToastrService));\n  };\n\n  FeedbackComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FeedbackComponent,\n    selectors: [[\"app-feedback\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[1, \"f-back\"], [1, \"Feedback-form\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"placeholder\", \"Email\", \"formControlName\", \"email\"], [\"type\", \"text\", \"placeholder\", \"Subject\", \"formControlName\", \"subject\"], [\"name\", \"\", \"id\", \"desciption\", \"cols\", \"30\", \"rows\", \"10\", \"placeholder\", \"Desciption....\", \"formControlName\", \"description\"], [\"type\", \"submit\", \"placeholder\", \"submit\", 1, \"s-button\"]],\n    template: function FeedbackComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h1\");\n        i0.ɵɵtext(2, \"Feedback\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function FeedbackComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.submitFeedback();\n        });\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelement(6, \"textarea\", 4);\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.FeedbackForm);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\".Feedback-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{display:block;margin:auto auto 15px;width:86%}.Feedback-form[_ngcontent-%COMP%]{margin-top:50px}.f-back[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{text-align:center}#desciption[_ngcontent-%COMP%]{display:block;margin:auto auto 15px;padding:8px;width:86%;box-shadow:inset 0 .53333vw #0000001a;border-radius:1.6vw;color:#1e1e1e;font-size:4vw;font-family:Helvetica,Tahoma,sans-serif}.s-button[_ngcontent-%COMP%]{background:linear-gradient(-180deg,#464646 15%,#121212 100%);color:orange}.fileupload[_ngcontent-%COMP%]{text-align:center;border:2px dashed;padding:28px 0;margin:18px}.stylefile[_ngcontent-%COMP%]{width:auto;padding:6px;background:black;color:orange;font-size:16px;border-radius:7px}.f-back[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{margin-top:15px}textarea#desciption[_ngcontent-%COMP%]::-moz-placeholder{padding:7px;font-size:14px}textarea#desciption[_ngcontent-%COMP%]::placeholder{padding:7px;font-size:14px}\"]\n  });\n  return FeedbackComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}