{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MustMatch } from 'src/app/helpers/must-match.validator';\nimport { PasswordStrengthValidator } from 'src/app/helpers/password-strength.validators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/login.service\";\nimport * as i2 from \"src/app/services/token.service\";\nimport * as i3 from \"src/app/services/toast-message.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\n\nfunction ChangePasswordComponent_ng_container_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ChangePasswordComponent_ng_container_21_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.ChangePwdForm.get(\"newpwd\").errors[\"passwordStrength\"], \"\");\n  }\n}\n\nfunction ChangePasswordComponent_ng_container_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ChangePasswordComponent_ng_container_21_span_1_Template, 2, 1, \"span\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.ChangePwdForm.get(\"newpwd\").hasError(\"passwordStrength\"));\n  }\n}\n\nfunction ChangePasswordComponent_ng_container_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" Confirm Password is required \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ChangePasswordComponent_ng_container_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"New Password and retype Password should be same ! \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ChangePasswordComponent_ng_container_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" Old Password is required \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ChangePasswordComponent_ng_container_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.result, \" \");\n  }\n}\n\nexport let ChangePasswordComponent = /*#__PURE__*/(() => {\n  class ChangePasswordComponent {\n    constructor(loginServie, tokenService, toastr, router, fb) {\n      this.loginServie = loginServie;\n      this.tokenService = tokenService;\n      this.toastr = toastr;\n      this.router = router;\n      this.fb = fb;\n      this.submitted = false;\n      this.isLogin = false;\n      this.isChangePassword = false;\n      this.AferLoginChangePassword = environment.AferLoginChangePassword;\n\n      if (this.tokenService.getToken()) {\n        this.isLogin = true;\n      }\n    }\n\n    ngOnInit() {\n      this.initChangePwdForm();\n      this.getProfile();\n    }\n\n    getProfile() {\n      if (!this.isLogin) {\n        return;\n      }\n\n      let accountInfo = this.tokenService.getUserInfo();\n\n      if (accountInfo) {\n        if (accountInfo.newUser == 1 && this.AferLoginChangePassword) {\n          $(\"#changePassBox\").fadeIn();\n        }\n      }\n    }\n\n    initChangePwdForm() {\n      this.ChangePwdForm = this.fb.group({\n        pwd: ['', Validators.required],\n        newpwd: ['', [Validators.required, PasswordStrengthValidator]],\n        retypepwd: ['', Validators.required],\n        context: ['Web']\n      }, {\n        validator: MustMatch('newpwd', 'retypepwd')\n      });\n    }\n\n    get f() {\n      return this.ChangePwdForm.controls;\n    }\n\n    get pwd() {\n      return this.ChangePwdForm.get('pwd');\n    }\n\n    get newpwd() {\n      return this.ChangePwdForm.get('newpwd');\n    }\n\n    get retypepwd() {\n      return this.ChangePwdForm.get('retypepwd');\n    }\n\n    ChangePwd() {\n      // console.log(this.ChangePwdForm)\n      this.submitted = true;\n\n      if (!this.ChangePwdForm.valid) {\n        return;\n      }\n\n      if (this.isChangePassword) {\n        return;\n      }\n\n      this.isChangePassword = true;\n      this.loginServie.changePassword(this.ChangePwdForm.value).subscribe(resp => {\n        if (resp.errorCode == 0) {\n          this.toastr.successMsg(\"Password updated successfull\");\n          this.toastr.successMsg(resp.errorDescription);\n          this.result = \"Password updated successfull\"; // this.toastr.successMsg(resp.errorDescription);\n\n          this.resetFrom(); // this.tokenService.removeToken();\n\n          this.submitted = false;\n          let accountInfo = this.tokenService.getUserInfo();\n\n          if (accountInfo) {\n            accountInfo.newUser = 0;\n            this.tokenService.setUserInfo(accountInfo);\n          }\n\n          let homeCom = 'dash';\n          this.router.navigate([homeCom]);\n          this.isChangePassword = false;\n        } else {\n          this.toastr.errorMsg(resp.errorDescription);\n          this.result = resp.errorDescription;\n          this.submitted = false;\n          this.isChangePassword = false;\n        }\n      });\n    }\n\n    resetFrom() {\n      // this.ChangePwdForm.reset();\n      this.initChangePwdForm();\n    }\n\n  }\n\n  ChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) {\n    return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.TokenService), i0.ɵɵdirectiveInject(i3.ToastMessageService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.FormBuilder));\n  };\n\n  ChangePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChangePasswordComponent,\n    selectors: [[\"app-change-password\"]],\n    decls: 26,\n    vars: 7,\n    consts: [[1, \"pass-head\"], [1, \"pass-wrap\"], [1, \"form-login\"], [\"name\", \"passwordPinForm\", 3, \"formGroup\", \"ngSubmit\"], [2, \"color\", \"#000\"], [\"id\", \"newPwd\", \"type\", \"password\", \"placeholder\", \"New Password\", \"formControlName\", \"newpwd\"], [\"id\", \"confirmPwd\", \"type\", \"password\", \"placeholder\", \"New Password Confirm\", \"formControlName\", \"retypepwd\"], [\"id\", \"currentPwd\", \"type\", \"password\", \"placeholder\", \"Old Password\", \"formControlName\", \"pwd\"], [\"id\", \"submit\", 1, \"btn-send\", 3, \"click\"], [\"type\", \"submit\", 2, \"display\", \"none\"], [1, \"txt-wrap\"], [4, \"ngIf\"]],\n    template: function ChangePasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\", 0);\n        i0.ɵɵelement(1, \"h1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"dl\", 2);\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function ChangePasswordComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.ChangePwd();\n        });\n        i0.ɵɵelementStart(5, \"dt\", 4);\n        i0.ɵɵtext(6, \"Change Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"dd\");\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"dd\");\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"dd\");\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"dd\");\n        i0.ɵɵelementStart(14, \"a\", 8);\n        i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_a_click_14_listener() {\n          return ctx.ChangePwdForm.invalid ? \"\" : ctx.ChangePwd();\n        });\n        i0.ɵɵtext(15, \"Change\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"button\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 10);\n        i0.ɵɵelementStart(18, \"ul\");\n        i0.ɵɵelementStart(19, \"li\");\n        i0.ɵɵtemplate(20, ChangePasswordComponent_ng_container_20_Template, 2, 0, \"ng-container\", 11);\n        i0.ɵɵtemplate(21, ChangePasswordComponent_ng_container_21_Template, 2, 1, \"ng-container\", 11);\n        i0.ɵɵtemplate(22, ChangePasswordComponent_ng_container_22_Template, 2, 0, \"ng-container\", 11);\n        i0.ɵɵtemplate(23, ChangePasswordComponent_ng_container_23_Template, 2, 0, \"ng-container\", 11);\n        i0.ɵɵtemplate(24, ChangePasswordComponent_ng_container_24_Template, 2, 0, \"ng-container\", 11);\n        i0.ɵɵtemplate(25, ChangePasswordComponent_ng_container_25_Template, 2, 1, \"ng-container\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.ChangePwdForm);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngIf\", (ctx.newpwd.errors == null ? null : ctx.newpwd.errors.required) && ctx.f.newpwd.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.f.newpwd.errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.retypepwd.errors == null ? null : ctx.retypepwd.errors.required) && ctx.f.retypepwd.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.retypepwd.errors == null ? null : ctx.retypepwd.errors.mustMatch);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.pwd.errors == null ? null : ctx.pwd.errors.required) && ctx.f.pwd.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.result);\n      }\n    },\n    directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i6.NgIf],\n    styles: [\".form-login[_ngcontent-%COMP%]   dt[_ngcontent-%COMP%]{color:#fff}\"]\n  });\n  return ChangePasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}