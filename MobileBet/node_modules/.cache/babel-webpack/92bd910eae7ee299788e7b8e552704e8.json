{"ast":null,"code":"import * as _ from 'lodash';\nimport { environment } from 'src/environments/environment';\nimport { checkBettingEnable } from '../helpers/check-betting-enabled';\nimport { checkTodayTomorrow } from '../helpers/check-today-tomorrow';\nimport * as i0 from \"@angular/core\";\nexport let DataFormatsService = /*#__PURE__*/(() => {\n  class DataFormatsService {\n    // private siteName = environment.siteName;\n    constructor() {}\n\n    getSportDataFormat(sportsData) {\n      let sportDataFormat = {};\n      sportsData.forEach(function (item) {\n        if (!sportDataFormat[item.eventTypeId]) {\n          if (item.eventTypeId == 4) {\n            item['sortId'] = 1;\n          }\n\n          if (item.eventTypeId == 1) {\n            item['sortId'] = 2;\n          }\n\n          if (item.eventTypeId == 2) {\n            item['sortId'] = 3;\n          }\n\n          sportDataFormat[item.eventTypeId] = {\n            eventTypeId: item.eventTypeId,\n            id: item.eventTypeId,\n            sportsName: item.sportsName,\n            sortId: item.sortId,\n            tournaments: {}\n          };\n        }\n\n        if (!sportDataFormat[item.eventTypeId].tournaments[item.competitionId]) {\n          sportDataFormat[item.eventTypeId].tournaments[item.competitionId] = {\n            competitionId: item.competitionId,\n            id: item.competitionId,\n            competitionName: item.competitionName,\n            matches: {}\n          };\n        }\n\n        if (!sportDataFormat[item.eventTypeId].tournaments[item.competitionId].matches[item.eventId]) {\n          item['Fancymarket'] = [];\n          item['BMmarket'] = [];\n          item['todayTomorrow'] = checkTodayTomorrow(item); // item['isBettable'] = true;\n\n          if (item.eventName.indexOf(' T10 v ') > -1) {\n            item['isVir'] = true;\n          }\n\n          item['isPremium'] = item.isPremium; // if (item.premiumInplay == 1 && item.sportsName == 'cricket' && !item.isVir && item.competitionName != item.eventName.trim()) {\n          //   item['isPremium'] = true;\n          // } else {\n          //   item['isPremium'] = false;\n          // }\n          // if (!item.isVir && item.eventTypeId < 5 && item.competitionName != item.eventName.trim()) {\n          //   item['isPremium'] = true;\n          // } else {\n          //   item['isPremium'] = false;\n          // }\n\n          if (item.eventName.indexOf(' SRL ') > -1) {\n            // item['isPremium'] = true;\n            item['isSrl'] = true;\n          }\n\n          item['videoEnabled'] = item.isStream;\n\n          if (item.isInPlay == 1) {\n            item['isBettable'] = true; // item['videoEnabled'] = true;\n\n            item['inplay'] = true;\n          } else {\n            item['isBettable'] = false; // item['videoEnabled'] = false;\n\n            item['inplay'] = false;\n          }\n\n          if (item.eventName.indexOf(' v ') == -1 || item.eventName.indexOf(' SRL ') > -1) {// item['videoEnabled'] = false;\n          }\n\n          if (item.isVirtual) {\n            item['isVir'] = true; // item['videoEnabled'] = false;\n          }\n\n          if (item.eventName) {\n            item['home'] = item.eventName.split(' v ')[0];\n            item['away'] = item.eventName.split(' v ')[1];\n          }\n\n          let favArray = localStorage.getItem('favourite');\n          let favArrays = [];\n\n          if (favArray) {\n            favArrays = favArray.split(',');\n          } // console.log(favArrays)\n\n\n          if (item.markets[0]) {\n            _.forEach(item.markets, function (market) {\n              let matchIndex = _.indexOf(favArrays, 'market_' + item.eventId.toString() + '_' + market.marketId); // console.log(matchIndex)\n\n\n              if (matchIndex > -1) {\n                market['isMulti'] = true;\n                item['isMulti'] = true; // console.log(market)\n              } else {\n                market['isMulti'] = false;\n              }\n            });\n\n            let bmIndex = _.indexOf(favArrays, 'bookmaker_' + item.eventId.toString() + '_' + item.marketId); // console.log(matchIndex)\n\n\n            if (bmIndex > -1) {\n              item['isBmMulti'] = true; // console.log(market)\n            } else {\n              item['isBmMulti'] = false;\n            }\n\n            let fancyIndex = _.indexOf(favArrays, 'fancy_' + item.eventId.toString() + '_' + item.marketId); // console.log(matchIndex)\n\n\n            if (fancyIndex > -1) {\n              item['isFancyMulti'] = true; // console.log(market)\n            } else {\n              item['isFancyMulti'] = false;\n            }\n\n            _.forEach(favArrays, fav => {\n              let splitMarket = fav.split('_');\n\n              if (splitMarket[0] == 'premium' && item.eventId == splitMarket[1]) {\n                item['isMulti'] = true;\n                item['isPreMulti'] = true;\n              }\n            });\n          }\n\n          if ((environment.siteName == 'cricbuzzer' || environment.siteName == 'cricbuzzerlive') && !item.isBettable) {\n            item.isBettable = checkBettingEnable(item.time, item.minBeforeInplay);\n          }\n\n          sportDataFormat[item.eventTypeId].tournaments[item.competitionId].matches[item.eventId] = item;\n          const currentTime = new Date();\n          const matchTime = new Date(item.time);\n          const timeDifference = matchTime.getTime() - currentTime.getTime();\n          const minutesRemaining = Math.floor(timeDifference / (1000 * 60));\n\n          if (minutesRemaining > 0 && minutesRemaining <= 15) {\n            item['startsIn'] = `Starting in ${minutesRemaining}'`;\n          } else {\n            item['startsIn'] = '';\n          }\n        }\n      });\n\n      if (!sportDataFormat[4]) {\n        let data = {};\n        data['eventTypeId'] = '4';\n        data['sportsName'] = 'cricket';\n        data['sortId'] = 1;\n        data['tournaments'] = [];\n        sportDataFormat['4'] = data;\n      }\n\n      if (!sportDataFormat[1]) {\n        let data = {};\n        data['eventTypeId'] = '1';\n        data['sportsName'] = 'soccer';\n        data['sortId'] = 2;\n        data['tournaments'] = [];\n        sportDataFormat['1'] = data;\n      }\n\n      if (!sportDataFormat[2]) {\n        let data = {};\n        data['eventTypeId'] = '2';\n        data['sportsName'] = 'tennis';\n        data['sortId'] = 3;\n        data['tournaments'] = [];\n        sportDataFormat['2'] = data;\n      }\n\n      if (!sportDataFormat[52]) {\n        let data = {};\n        data['eventTypeId'] = '52';\n        data['sportsName'] = 'Kabaddi';\n        data['sortId'] = 4;\n        data['tournaments'] = [];\n        sportDataFormat['52'] = data;\n      }\n\n      return sportDataFormat;\n    }\n\n    sportEventWise(sportsData, isInplay) {\n      let sportEventData = [];\n\n      if (sportsData == undefined) {\n        return sportEventData;\n      }\n\n      _.forEach(sportsData, function (item, index) {\n        let data = {};\n        let matchesData = [];\n        let inplayCounts = 0;\n\n        _.forEach(item.tournaments, function (item2) {\n          _.forEach(item2.matches, function (item3) {\n            if (item3.isInPlay == 1) {\n              inplayCounts++;\n            }\n\n            if (isInplay == 1 && item3.isInPlay == 1) {\n              matchesData.push(item3);\n            }\n\n            if (isInplay == 0) {\n              matchesData.push(item3);\n            }\n          });\n        });\n\n        data[\"eventTypeId\"] = item.eventTypeId;\n        data[\"sportsName\"] = item.sportsName;\n        data[\"id\"] = item.eventTypeId;\n        data[\"sortId\"] = item.sortId;\n        data[\"inplayCounts\"] = inplayCounts;\n        data[\"matches\"] = matchesData;\n\n        if (matchesData.length > 0 && isInplay == 1) {\n          sportEventData.push(data);\n        } else {\n          sportEventData.push(data);\n        }\n      });\n\n      sportEventData.sort(function (a, b) {\n        return a.sortId - b.sortId;\n      });\n      return sportEventData;\n    }\n\n    InplayTodayTomorrowEventWise(sportsData, tabType) {\n      let sportEventData = [];\n\n      if (sportsData == undefined) {\n        return sportEventData;\n      }\n\n      _.forEach(sportsData, function (item) {\n        let data = {};\n        let matchesData = [];\n\n        _.forEach(item.tournaments, function (item2) {\n          _.forEach(item2.matches, function (item3) {\n            if (item3.inplay && tabType == 'inplay') {\n              //inplay matches\n              matchesData.push(item3);\n            }\n\n            if (!item3.inplay && tabType == 'today' && item3.todayTomorrow == 0) {\n              //today matches\n              matchesData.push(item3);\n            }\n\n            if (!item3.inplay && tabType == 'tomorrow' && item3.todayTomorrow == 1) {\n              //tomorrow matches\n              matchesData.push(item3);\n            }\n          });\n        });\n\n        data[\"eventTypeId\"] = item.eventTypeId;\n        data[\"sportsName\"] = item.sportsName;\n        data[\"id\"] = item.eventTypeId;\n        data[\"sortId\"] = item.sortId;\n        data[\"matches\"] = matchesData;\n\n        if (matchesData.length > 0) {\n          sportEventData.push(data);\n        }\n      });\n\n      sportEventData.sort(function (a, b) {\n        return a.sortId - b.sortId;\n      }); // console.log(sportEventData)\n\n      return sportEventData;\n    }\n\n    favouriteEventWise(sportsData, matchBfId) {\n      // console.log(sportsData)\n      let groupedEvents = [];\n      let favArray = localStorage.getItem('favourite');\n      let favArrays = [];\n\n      if (favArray) {\n        favArrays = favArray.split(',');\n      }\n\n      if (favArray || matchBfId) {\n        // favArray = JSON.parse(favArray);\n        _.forEach(sportsData, function (item, index) {\n          _.forEach(item.tournaments, function (item2, index2) {\n            _.forEach(item2.matches, function (item3, index3) {\n              if (matchBfId) {\n                if (matchBfId == item3.eventId) {\n                  groupedEvents.push(item3);\n                }\n              } else {\n                let matchIndex = _.indexOf(favArrays, item3.eventId.toString());\n\n                if (matchIndex > -1) {\n                  item3['isMulti'] = true;\n                  groupedEvents.push(item3);\n                } else {\n                  _.forEach(item3.markets, function (item4, index4) {\n                    let mktIndex = _.indexOf(favArrays, 'market_' + item3.eventId.toString() + '_' + item4.marketId);\n\n                    if (mktIndex > -1) {\n                      item3['isMulti'] = true;\n                      item4['isMulti'] = true;\n                    }\n                  });\n\n                  let bmIndex = _.indexOf(favArrays, 'bookmaker_' + item3.eventId.toString() + '_' + item3.marketId);\n\n                  if (bmIndex > -1) {\n                    item3['isMulti'] = true;\n                    item3['isBmMulti'] = true;\n                  }\n\n                  let fancyIndex = _.indexOf(favArrays, 'fancy_' + item3.eventId.toString() + '_' + item3.marketId);\n\n                  if (fancyIndex > -1) {\n                    item3['isMulti'] = true;\n                    item3['isFancyMulti'] = true;\n                  }\n\n                  _.forEach(favArrays, fav => {\n                    let splitMarket = fav.split('_');\n\n                    if (splitMarket[0] == 'premium' && item3.eventId == splitMarket[1]) {\n                      item3['isMulti'] = true;\n                      item3['isPreMulti'] = true;\n                    }\n                  });\n\n                  if (item3.isMulti) {\n                    groupedEvents.push(item3);\n                  }\n                }\n              }\n            });\n          });\n        });\n      }\n\n      return groupedEvents;\n    }\n\n    matchUnmatchBetsMarketWise(matchBets) {\n      // console.log(matchBets)\n      let matchWiseBets = [];\n      let totalBets = 0;\n      let totalUBets = 0;\n      matchBets = _.orderBy(matchBets, [obj => new Date(obj.betTime)], ['desc']);\n\n      _.forEach(matchBets, (bet, betIndex) => {\n        bet['type'] = bet.betType;\n\n        if (bet.betType == 'yes') {\n          bet.betType = 'back';\n        }\n\n        if (bet.betType == 'no') {\n          bet.betType = 'lay';\n        }\n\n        totalBets++;\n\n        if (bet.unmatched == 1) {\n          totalUBets++;\n        }\n\n        bet['stakeValid'] = true;\n        bet['isActive'] = true;\n        bet['profit'] = bet.PL;\n\n        if (bet.isFancy == 1) {\n          bet['odds'] = bet.runs + '/' + parseInt(bet.odds);\n        }\n\n        let eventIndex = _.findIndex(matchWiseBets, {\n          'eventId': bet.eventId\n        });\n\n        if (eventIndex < 0) {\n          matchWiseBets.push({\n            eventId: bet.eventId,\n            eventName: bet.eventName,\n            sportName: bet.sportName,\n            markets: [{\n              marketId: bet.eventId,\n              bfId: bet.eventId,\n              name: bet.marketName,\n              marketType: bet.isFancy,\n              eventName: bet.eventName,\n              isMatched: bet.unmatched == 0 ? true : false,\n              isUnmatched: bet.unmatched == 1 ? true : false,\n              betType: [{\n                betType: bet.betType,\n                isMatched: bet.unmatched == 0 ? true : false,\n                isUnmatched: bet.unmatched == 1 ? true : false,\n                bets: [bet]\n              }]\n            }]\n          });\n        } else {\n          let mktIndex = _.findIndex(matchWiseBets[eventIndex].markets, {\n            'name': bet.marketName\n          });\n\n          if (mktIndex < 0) {\n            matchWiseBets[eventIndex].markets.push({\n              marketId: bet.marketId,\n              bfId: bet.bfId,\n              name: bet.marketName,\n              marketType: bet.isFancy,\n              eventName: bet.eventName,\n              isMatched: bet.unmatched == 0 ? true : false,\n              isUnmatched: bet.unmatched == 1 ? true : false,\n              betType: [{\n                betType: bet.betType,\n                isMatched: bet.unmatched == 0 ? true : false,\n                isUnmatched: bet.unmatched == 1 ? true : false,\n                bets: [bet]\n              }]\n            });\n          } else {\n            let typeIndex = _.findIndex(matchWiseBets[eventIndex].markets[mktIndex].betType, {\n              'betType': bet.betType\n            });\n\n            if (typeIndex < 0) {\n              matchWiseBets[eventIndex].markets[mktIndex].betType.push({\n                betType: bet.betType,\n                isMatched: bet.unmatched == 0 ? true : false,\n                isUnmatched: bet.unmatched == 1 ? true : false,\n                bets: [bet]\n              });\n            } else {\n              let betIndex = _.findIndex(matchWiseBets[eventIndex].markets[mktIndex].betType[typeIndex].bets, {\n                'id': bet.id\n              });\n\n              if (betIndex < 0) {\n                matchWiseBets[eventIndex].markets[mktIndex].betType[typeIndex].bets.push(bet);\n              }\n            }\n\n            if (bet.unmatched == 0 && mktIndex > -1) {\n              matchWiseBets[eventIndex].markets[mktIndex].isMatched = true;\n            }\n\n            if (bet.unmatched == 1 && mktIndex > -1) {\n              matchWiseBets[eventIndex].markets[mktIndex].isUnmatched = true;\n            }\n\n            if (bet.unmatched == 0 && typeIndex > -1 && mktIndex > -1) {\n              matchWiseBets[eventIndex].markets[mktIndex].betType[typeIndex].isMatched = true;\n            }\n\n            if (bet.unmatched == 1 && typeIndex > -1 && mktIndex > -1) {\n              matchWiseBets[eventIndex].markets[mktIndex].betType[typeIndex].isUnmatched = true;\n            }\n          }\n        }\n      });\n\n      var matchWiseData = {\n        matchWiseBets: matchWiseBets,\n        totalBets: totalBets,\n        totalUBets: totalUBets\n      };\n      return matchWiseData;\n    }\n\n    getRacingFormat(raceList) {\n      // console.log(raceList)\n      if (!raceList) {\n        return;\n      }\n\n      var listRaceFormat = [];\n      raceList.forEach(function (item, index) {\n        let countryIndex = listRaceFormat.findIndex(race => race.countryCode == item.countryCode); // console.log(countryIndex)\n\n        var listRacesFormat = [];\n        let objectArray = Object.entries(item.races);\n        objectArray.forEach(function (item2, index2) {\n          // match.markets.push(market);\n          var md = new Date(item2[1].startTime);\n          var mn = md.getHours();\n          var mday = md.getDay();\n          var d = new Date();\n          var n = d.getHours() - 1;\n          var day = d.getDay(); // console.log(day, mday)\n\n          if (item2[1].inplay == 1) {\n            listRacesFormat.splice(0, 1);\n            item2[1]['isInplay'] = true;\n\n            if (mn > n) {\n              listRacesFormat.push(item2[1]);\n            }\n          } else {\n            item2[1]['isInplay'] = false;\n\n            if (mn > n && mday == day || mday > day) {\n              listRacesFormat.push(item2[1]);\n            }\n          }\n\n          if (listRacesFormat.length == 1) {\n            if (listRacesFormat[0].inplay == 1) {\n              listRacesFormat.splice(0, 1);\n            }\n          }\n        });\n        item.races = listRacesFormat;\n\n        if (item.races.length > 0) {\n          if (countryIndex == -1) {\n            listRaceFormat.push({\n              countryCode: item.countryCode,\n              venueVo: [item]\n            });\n          } else {\n            listRaceFormat[countryIndex].venueVo.push(item);\n          }\n        }\n      });\n      return listRaceFormat;\n    }\n\n    getNextRacingFormat(raceList) {\n      // console.log(raceList)\n      if (!raceList) {\n        return;\n      }\n\n      var nextRacesFormat = [];\n      raceList.forEach(function (item) {\n        let objectArray = Object.entries(item.races);\n        objectArray.forEach(function (item2) {\n          item2[1]['venue'] = item.venue;\n          item2[1]['name'] = item2[1].eventName.replace(/ /g, '');\n          item2[1]['marketName'] = item2[1].marketName.split(' - ')[1];\n\n          if (item2[1].inplay != 1) {\n            nextRacesFormat.push(item2[1]);\n          }\n        });\n      });\n      nextRacesFormat = _.sortBy(nextRacesFormat, (a, b) => {\n        return new Date(a.startTime);\n      });\n      return nextRacesFormat;\n    }\n\n    toursWise(toursData) {\n      let ToursData = [];\n\n      if (!toursData) {\n        return ToursData;\n      }\n\n      if (!toursData.tournaments) {\n        return ToursData;\n      }\n\n      _.forEach(toursData.tournaments, function (item, index) {\n        let data = {};\n        data[\"competitionId\"] = item.competitionId;\n        data[\"competitionName\"] = item.competitionName;\n        data[\"id\"] = item.id;\n        data[\"matches\"] = [];\n\n        _.forEach(item.matches, function (match) {\n          data[\"matches\"].push(match);\n        });\n\n        if (item.competitionName) {\n          ToursData.push(data);\n        }\n      });\n\n      return ToursData;\n    }\n\n    ToggleFavourite(eventId) {\n      let favArray = localStorage.getItem('favourite');\n      eventId = eventId.toString();\n\n      if (!favArray) {\n        favArray = eventId;\n      } else {\n        if (!favArray.includes(eventId)) {\n          favArray = favArray + ',' + eventId;\n        } else {\n          favArray = favArray.replace(',' + eventId, '');\n          favArray = favArray.replace(eventId, '');\n        }\n      } // favArray = JSON.parse(favArray);\n      // console.log(favArray);\n\n\n      localStorage.setItem('favourite', favArray);\n    }\n\n  }\n\n  DataFormatsService.ɵfac = function DataFormatsService_Factory(t) {\n    return new (t || DataFormatsService)();\n  };\n\n  DataFormatsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataFormatsService,\n    factory: DataFormatsService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataFormatsService;\n})();","map":null,"metadata":{},"sourceType":"module"}