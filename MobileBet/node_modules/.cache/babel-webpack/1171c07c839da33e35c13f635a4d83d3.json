{"ast":null,"code":"import { HttpResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { timeout } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/token.service\";\nimport * as i2 from \"@angular/router\";\nexport let TokenInterceptor = /*#__PURE__*/(() => {\n  class TokenInterceptor {\n    constructor(tokenService, router) {\n      this.tokenService = tokenService;\n      this.router = router;\n    }\n\n    intercept(request, next) {\n      let req = request.clone();\n\n      if (!req.url.includes('/login') && !req.url.includes('/bm_fancy') && !req.url.includes('/oddsInplay/?ids') && !req.url.includes('/img.png') && !req.url.includes('103.228.112.83')) {\n        let token = this.tokenService.getToken();\n\n        if (token) {\n          req = request.clone({\n            setHeaders: {\n              Authorization: this.tokenService.getToken()\n            }\n          });\n        } else {// this.tokenService.removeToken();\n          //   this.router.navigate(['/login']);\n          // window.location.href = \"highlight\";\n        }\n      }\n\n      let timeoutDuration = 10000; // 10 seconds\n\n      if (req.url.includes('/oddsInplay') || req.url.includes('/bm_fancy') || req.url.includes('/sports_book')) {\n        timeoutDuration = 4000; // 4 seconds\n      }\n\n      return next.handle(req).pipe(timeout(timeoutDuration), map(event => {\n        var _a, _b, _c, _d;\n\n        if (event instanceof HttpResponse) {\n          // if (event.url.indexOf('ping') > -1) {\n          //   if (!event.body) {\n          //     this.router.navigate(['/login']);\n          //   }\n          // }\n          // console.log(event.body)\n          // if (!event.body) {\n          //   this.router.navigate(['/login']);\n          // }\n          if (((_b = (_a = event === null || event === void 0 ? void 0 : event.body) === null || _a === void 0 ? void 0 : _a.errorDescription) === null || _b === void 0 ? void 0 : _b.toLowerCase().includes('no session')) || ((_d = (_c = event === null || event === void 0 ? void 0 : event.body) === null || _c === void 0 ? void 0 : _c.errorDescription) === null || _d === void 0 ? void 0 : _d.toLowerCase().includes('session expired'))) {\n            this.tokenService.removeToken(); // this.router.navigate(['/login']);\n            // window.location.href = \"highlight\";\n          }\n        }\n\n        return event;\n      }));\n    }\n\n  }\n\n  TokenInterceptor.ɵfac = function TokenInterceptor_Factory(t) {\n    return new (t || TokenInterceptor)(i0.ɵɵinject(i1.TokenService), i0.ɵɵinject(i2.Router));\n  };\n\n  TokenInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenInterceptor,\n    factory: TokenInterceptor.ɵfac\n  });\n  return TokenInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}