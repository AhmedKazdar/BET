{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Ahmed Kazdar/OneDrive/Desktop/Cricity Bet/MobileBet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/fire/auth\";\nexport const AUTH_TOKEN = 'AuthToken';\nexport const USER_INFO = 'UserInfo';\nexport const NEW_USER = 'NewUser';\nexport const ACTIVE_PLAYER = 'ActivePlayer';\nexport const LANGUAGE = 'LANGUAGE';\nexport const OFFER_ID = 'OFFER_ID';\nexport const CLICK_ID = 'CLICK_ID';\nexport const AFF_ID = 'AFF_ID';\nexport let TokenService = /*#__PURE__*/(() => {\n  class TokenService {\n    constructor(cookieService, router, fireAuth) {\n      this.cookieService = cookieService;\n      this.router = router;\n      this.fireAuth = fireAuth;\n      this.stakeButtons = [1000, 5000, 10000, 25000, 50000, 100000, 200000, 500000, 1000000, 2500000];\n    }\n\n    setTC(data) {\n      this.cookieService.set('tc', data);\n    }\n\n    getTC() {\n      return this.cookieService.get('tc');\n    }\n\n    setCasBanner(data) {\n      this.cookieService.set('CasBanner', data);\n    }\n\n    getCasBanner() {\n      return this.cookieService.get('CasBanner');\n    }\n\n    setToken(token) {\n      this.cookieService.set(AUTH_TOKEN, token); // localStorage.setItem(AUTH_TOKEN, token);\n    }\n\n    getToken() {\n      if (this.getLocalToken()) {\n        return this.getLocalToken();\n      } else {\n        return this.cookieService.get(AUTH_TOKEN);\n      }\n    }\n\n    setLocalToken(token) {\n      localStorage.setItem(AUTH_TOKEN, token);\n    }\n\n    getLocalToken() {\n      return localStorage.getItem(AUTH_TOKEN);\n    }\n\n    setActivePlayer(activeplayer) {\n      localStorage.setItem(ACTIVE_PLAYER, activeplayer);\n    }\n\n    getActivePlayer() {\n      return localStorage.getItem(ACTIVE_PLAYER);\n    }\n\n    removeToken() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this.fireAuth.signOut();\n\n        _this.cookieService.delete(AUTH_TOKEN);\n\n        _this.cookieService.deleteAll();\n\n        var newUser = _this.getNewUser();\n\n        localStorage.clear();\n\n        if (newUser != null) {\n          _this.setNewUser(1);\n        } // this.router.navigate(['/login']);\n        // window.location.href = \"/home\";\n        // window.location.href = window.location.origin+ \"/#/home\";\n        // window.location.href = window.location.origin +\"/\" ;\n\n\n        window.location.href = window.location.origin + window.location.pathname;\n      })();\n    }\n\n    setUserInfo(userInfo) {\n      this.cookieService.set(USER_INFO, JSON.stringify(userInfo));\n      localStorage.setItem(USER_INFO, JSON.stringify(userInfo));\n      localStorage.setItem(USER_INFO, JSON.stringify(userInfo));\n    }\n\n    getUserInfo() {\n      // console.log(this.getLocalUserInfo())\n      if (this.getLocalUserInfo()) {\n        return this.getLocalUserInfo();\n      } else {\n        return this.cookieService.get(USER_INFO) ? JSON.parse(this.cookieService.get(USER_INFO)) : null;\n      }\n    }\n\n    getLocalUserInfo() {\n      return localStorage.getItem(USER_INFO) ? JSON.parse(localStorage.getItem(USER_INFO)) : null;\n    }\n\n    setMaintanance(value) {\n      this.cookieService.set('isMaintanance', value);\n    }\n\n    getMaintanance() {\n      return this.cookieService.get('isMaintanance');\n    }\n\n    removeMaintanance() {\n      this.cookieService.delete('isMaintanance');\n    }\n\n    setStakeButtons(stakes) {\n      this.cookieService.set(\"stakeValue\", JSON.stringify(stakes));\n    }\n\n    getStakeButtons() {\n      return this.cookieService.get(\"stakeValue\") ? JSON.parse(this.cookieService.get(\"stakeValue\")) : this.stakeButtons;\n    }\n\n    removeUserInfo() {\n      this.cookieService.delete(USER_INFO);\n      this.cookieService.deleteAll();\n    }\n\n    setNewUser(newUser) {\n      localStorage.setItem(NEW_USER, newUser);\n    }\n\n    getNewUser() {\n      return localStorage.getItem(NEW_USER);\n    }\n\n    setLanguage(lang) {\n      localStorage.setItem(LANGUAGE, lang);\n    }\n\n    getLanguage() {\n      return localStorage.getItem(LANGUAGE);\n    }\n\n    setOfferId(offerId) {\n      localStorage.setItem(OFFER_ID, offerId);\n    }\n\n    getOfferId() {\n      return localStorage.getItem(OFFER_ID);\n    }\n\n    setClickID(clickId) {\n      localStorage.setItem(CLICK_ID, clickId);\n    }\n\n    getClickID() {\n      return localStorage.getItem(CLICK_ID);\n    }\n\n    setAffId(affId) {\n      localStorage.setItem(AFF_ID, affId);\n    }\n\n    getAffId() {\n      return localStorage.getItem(AFF_ID);\n    }\n\n  }\n\n  TokenService.ɵfac = function TokenService_Factory(t) {\n    return new (t || TokenService)(i0.ɵɵinject(i1.CookieService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.AngularFireAuth));\n  };\n\n  TokenService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenService,\n    factory: TokenService.ɵfac,\n    providedIn: 'root'\n  });\n  return TokenService;\n})();","map":null,"metadata":{},"sourceType":"module"}