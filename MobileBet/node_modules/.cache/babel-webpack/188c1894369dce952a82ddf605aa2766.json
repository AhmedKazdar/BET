{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Ahmed Kazdar/OneDrive/Desktop/Cricity Bet/MobileBet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"ng-recaptcha\";\nimport * as i4 from \"@angular/fire/auth\";\nimport * as i5 from \"../services/token.service\";\nimport * as i6 from \"ngx-toastr\";\nimport * as i7 from \"@angular/fire/database\";\nimport * as i8 from \"../services/login.service\";\nimport * as i9 from \"../services/client-api.service\";\nexport class AuthService {\n  constructor(router, http, recaptchaV3Service, fireAuth, tokenService, toastr, db, loginService, clientApi) {\n    this.router = router;\n    this.http = http;\n    this.recaptchaV3Service = recaptchaV3Service;\n    this.fireAuth = fireAuth;\n    this.tokenService = tokenService;\n    this.toastr = toastr;\n    this.db = db;\n    this.loginService = loginService;\n    this.clientApi = clientApi;\n    this.isAffiliate = environment.isAffiliate;\n    this.siteName = environment.siteName;\n    this.fireAuth.authState.subscribe(user => {\n      if (user) {\n        console.log(user.email);\n      } else {\n        localStorage.setItem('user', 'null');\n        JSON.parse(localStorage.getItem('user'));\n      }\n    });\n    this.clientApi.getb2cid().subscribe(resp => {\n      if (resp) {\n        this.b2cID = resp.result[0].b2cID;\n      }\n    });\n  }\n\n  get isLoggedIn() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return user !== null && user.emailVerified !== false ? true : false;\n  }\n\n  GoogleAuth(type) {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    return this.AuthLogin(provider, type);\n  }\n\n  FacebookAuth(type) {\n    const provider = new firebase.auth.FacebookAuthProvider();\n    return this.AuthLogin(provider, type);\n  }\n\n  SignOut() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.fireAuth.signOut().then(() => {\n        localStorage.removeItem('user');\n      });\n    })();\n  }\n\n  SetUserData(user) {\n    this.db.database.ref('users').child(user.username).set({\n      email: user.email,\n      username: user.username,\n      password: user.password,\n      dob: user.dob,\n      phoneno: user.phoneno,\n      currency: user.currency\n    });\n  }\n\n  SignUp(userData) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const result = yield _this2.fireAuth.createUserWithEmailAndPassword(userData.email, userData.password);\n\n        if (result.user) {\n          userData.firebaseId = result.user.uid;\n\n          _this2.loginService.register(userData).subscribe(resp => {\n            if (resp.errorCode === 0) {\n              _this2.SendVerificationMail();\n\n              if (_this2.isAffiliate && _this2.tokenService.getClickID() != null && _this2.tokenService.getClickID() != 'undefined') {\n                let affData = {\n                  user_id: resp.result[0].userId,\n                  click_id: _this2.tokenService.getClickID(),\n                  aff_id: _this2.tokenService.getAffId(),\n                  offer_id: _this2.tokenService.getOfferId(),\n                  siteName: _this2.siteName\n                };\n\n                _this2.sendAffData(affData);\n              }\n            } else {\n              _this2.toastr.error(resp.errorDescription);\n\n              _this2.SignOut();\n            }\n\n            $('#login_loading').css('display', 'none');\n          }, err => {\n            $('#login_loading').css('display', 'none');\n          });\n        }\n      } catch (e) {\n        if (e.code == 'auth/account-exists-with-different-credential' || e.code == 'auth/email-already-in-use') {\n          _this2.toastr.error(\"Email already in use by another account\");\n\n          $('#login_loading').css('display', 'none');\n        }\n      }\n    })();\n  }\n\n  SignInWithEmail(userData, type) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const result = yield _this3.fireAuth.signInWithEmailAndPassword(userData.userName, userData.password);\n\n        if (result.user) {\n          if (result.user.emailVerified) {\n            _this3.loginService.login(userData).subscribe(resp => {\n              if (resp.errorCode === 0) {\n                _this3.tokenService.setToken(resp.result[0].token);\n\n                _this3.tokenService.setUserInfo(resp.result[0]); // this.router.navigate(['highlight']);\n                // window.location.href = \"home\";\n\n\n                window.location.href = window.location.origin + window.location.pathname;\n              } else {\n                if (!resp.errorDescription) {\n                  resp.errorDescription = \"Username or password is wrong\";\n                }\n\n                _this3.SignOut();\n\n                _this3.toastr.error(resp.errorDescription);\n              }\n\n              $('#login_loading').css('display', 'none');\n            });\n          } else {\n            $('#login_loading').css('display', 'none');\n\n            _this3.toastr.error(\"Email Address is not Verified\");\n\n            _this3.SignOut();\n          }\n        }\n      } catch (e) {\n        if (e.code == 'auth/user-not-found') {\n          _this3.toastr.error(\"User Not Found\");\n        }\n\n        if (e.code == 'auth/wrong-password') {\n          _this3.toastr.error(\"Invalid Password\");\n        }\n      }\n    })();\n  }\n\n  SendVerificationMail() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this4.fireAuth.currentUser.then(user => {\n        return user.sendEmailVerification();\n      }).then(() => {\n        _this4.router.navigate(['/highlight']).then(() => {\n          $('#verifyEmail').css('display', 'block');\n        });\n      });\n    })();\n  }\n\n  AuthLogin(provider, type) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const result = yield _this5.fireAuth.signInWithPopup(provider);\n        provider.addScope('https://www.googleapis.com/auth/user.birthday.read');\n\n        if (type == 0) {\n          _this5.RegisterWithSocial(result.user, 0, _this5.b2cID);\n        } else {\n          _this5.Login(result.user);\n        }\n      } catch (e) {\n        if (e.code == 'auth/account-exists-with-different-credential') {\n          var email = e.email;\n          var pendingCredential = e.credential;\n\n          _this5.fireAuth.fetchSignInMethodsForEmail(email).then(methods => {\n            if (methods[0] === 'password') {\n              // var password = promptUserForPassword(); // TODO: implement promptUserForPassword.\n              _this5.fireAuth.signInWithEmailAndPassword(email, 'password').then(result_2 => {\n                // Step 4a.\n                result_2.user.linkWithCredential(pendingCredential);\n\n                _this5.Login(result_2.user);\n              });\n\n              return;\n            }\n\n            if (methods[0] === 'google.com') {\n              _this5.toastr.error('You already have an account with the selected email address.');\n\n              _this5.fireAuth.signInWithPopup(new firebase.auth.GoogleAuthProvider()).then(result => {\n                result.user.linkAndRetrieveDataWithCredential(pendingCredential);\n\n                _this5.Login(result.user);\n              });\n\n              return;\n            }\n\n            if (methods[0] === 'facebook.com') {\n              _this5.toastr.error('You already have an account with the selected email address.');\n\n              _this5.fireAuth.signInWithPopup(new firebase.auth.FacebookAuthProvider()).then(result => {\n                result.user.linkAndRetrieveDataWithCredential(pendingCredential);\n\n                _this5.Login(result.user);\n              });\n\n              return;\n            }\n          });\n        }\n      }\n    })();\n  }\n\n  sendAffData(affData) {\n    this.loginService.addAffUser(affData).subscribe(resp => {\n      if (resp.status != 'Success') {\n        this.sendAffData(affData);\n      }\n    });\n  }\n\n  RegisterWithSocial(user, type, b2cID) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      let userData = {\n        firstName: user.displayName != null ? user.displayName.split(' ')[0] : \"\",\n        lastName: user.displayName != null ? user.displayName.split(' ')[1] : \"\",\n        userName: \"\",\n        password: \"\",\n        currencyCode: environment.currency,\n        email: user.email != null ? user.email : \"\",\n        b2cID: b2cID,\n        phoneNumber: user.phoneNumber == null ? \"\" : user.phoneNumber,\n        address: \"\",\n        birthDate: user.birthDate != null ? user.birthDate : \"\",\n        firebaseId: user.uid,\n        blocChain: \"\",\n        domain: environment.origin,\n        isb2c: 1\n      };\n      console.log(userData);\n\n      _this6.loginService.register(userData).subscribe(resp => {\n        console.log(resp); // if (resp.errorCode === 0) {\n        //  if(type==0){\n        //   if(user.email!=null||user.email==\"\"){\n        //     let data={\"email\":user.email,\"siteName\":environment.siteName,\"domain\":environment.domain}\n        //     this.loginService.sendWelcomeMail(data).subscribe((resp:any)=>{console.log(resp.status)});\n        //   }\n        //   this.toastr.success('Registered Successfully');\n        //   this.tokenService.setToken(resp.result[0].token);\n        //   this.tokenService.setUserInfo(resp.result[0]);\n        //   window.location.href = window.location.origin + window.location.pathname;\n        //  }\n        // } else {\n        //   this.SignOut()\n        //   this.toastr.error(resp.errorDescription);\n        // }\n\n        if (resp.errorCode === 0) {\n          if (_this6.isAffiliate && _this6.tokenService.getClickID() != null && _this6.tokenService.getClickID() != 'undefined') {\n            let affData = {\n              user_id: resp.result[0].userId,\n              click_id: _this6.tokenService.getClickID(),\n              aff_id: _this6.tokenService.getAffId(),\n              offer_id: _this6.tokenService.getOfferId(),\n              siteName: _this6.siteName\n            };\n\n            _this6.sendAffData(affData);\n          } else {\n            if (type == 0) {\n              if (user.email != null || user.email == \"\") {\n                let data = {\n                  \"email\": user.email,\n                  \"siteName\": environment.siteName,\n                  \"domain\": environment.domain\n                };\n\n                _this6.loginService.sendWelcomeMail(data).subscribe(resp => {\n                  console.log(resp.status);\n                });\n              }\n\n              _this6.toastr.success('Registered Successfully');\n\n              _this6.tokenService.setToken(resp.result[0].token);\n\n              _this6.tokenService.setUserInfo(resp.result[0]);\n\n              window.location.href = window.location.origin + window.location.pathname;\n            }\n          }\n        } else {\n          _this6.SignOut();\n\n          _this6.toastr.error(resp.errorDescription);\n        }\n\n        $('#login_loading').css('display', 'none');\n      }, err => {\n        _this6.SignOut();\n\n        console.log(err);\n      });\n    })();\n  }\n\n  Login(user) {\n    let body = {\n      userName: user.username != null ? user.username : \"\",\n      password: user.password != null ? user.password : \"\",\n      firebaseId: user.uid,\n      captcha: '0000',\n      log: '0000',\n      origin: environment.origin\n    };\n    this.recaptchaV3Service.execute('importantAction').subscribe(token => {\n      if (token != null || token != \"\") {\n        this.loginService.login(body).subscribe(resp => {\n          if (resp.errorCode === 0) {\n            this.toastr.success(\"Login Successfully\");\n            this.tokenService.setToken(resp.result[0].token);\n            this.tokenService.setUserInfo(resp.result[0]);\n            window.location.href = window.location.origin + window.location.pathname;\n            $('#login_loading').css('display', 'none');\n          } else {\n            if (resp.errorDescription === \"User Not Found.\" || resp.errorDescription === \"invalid username/password6\") {\n              this.RegisterWithSocial(user, 0, this.b2cID);\n            }\n          }\n        }, err => {\n          this.SignOut();\n          console.log(err);\n        });\n      }\n    });\n  }\n\n  phoneLogin(phoneNumber, appVerifier) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      _this7.fireAuth.signInWithPhoneNumber(phoneNumber, appVerifier).then(result => {\n        console.log(result.confirm);\n\n        if (result.confirm) {\n          _this7.toastr.success('OTP has been sent. Please check your phone.');\n\n          $('#login_loading').css('display', 'none');\n          _this7.confirmationResult = result;\n        }\n      }).catch(error => console.log(error));\n    })();\n  }\n\n  otpSubmit(code, type, pass, dob, b2cID) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      _this8.confirmationResult.confirm(code).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (result) {\n          if (type == 0) {\n            let userData = {\n              firstName: result.user.displayName != null ? result.user.displayName.split(' ')[0] : \"\",\n              lastName: result.user.displayName != null ? result.user.displayName.split(' ')[1] : \"\",\n              userName: \"\",\n              password: type == 0 ? pass : \"\",\n              currencyCode: environment.currency,\n              email: \"\",\n              b2cID: b2cID,\n              phoneNumber: result.user.phoneNumber == null ? \"\" : result.user.phoneNumber,\n              address: \"\",\n              birthDate: type == 0 ? dob : result.user.birthDate != null ? result.user.birthDate : \"\",\n              firebaseId: result.user.uid,\n              blocChain: \"\",\n              domain: environment.origin,\n              isb2c: 1\n            };\n            console.log(userData);\n\n            _this8.loginService.register(userData).subscribe(resp => {\n              console.log(resp); // if (resp.errorCode === 0) {\n              //  if(type==0){\n              //   this.toastr.success('Registered Successfully');\n              //   this.tokenService.setToken(resp.result[0].token);\n              //   this.tokenService.setUserInfo(resp.result[0]);\n              //   window.location.href = window.location.origin + window.location.pathname;\n              //  }\n              // } else {\n              //   this.SignOut()\n              //   this.toastr.error(resp.errorDescription);\n              // }\n\n              if (resp.errorCode === 0) {\n                if (_this8.isAffiliate && _this8.tokenService.getClickID() != null && _this8.tokenService.getClickID() != 'undefined') {\n                  let affData = {\n                    user_id: resp.result[0].userId,\n                    click_id: _this8.tokenService.getClickID(),\n                    aff_id: _this8.tokenService.getAffId(),\n                    offer_id: _this8.tokenService.getOfferId(),\n                    siteName: _this8.siteName\n                  };\n\n                  _this8.sendAffData(affData);\n                } else {\n                  if (type == 0) {\n                    _this8.toastr.success('Registered Successfully');\n\n                    _this8.tokenService.setToken(resp.result[0].token);\n\n                    _this8.tokenService.setUserInfo(resp.result[0]);\n\n                    window.location.href = window.location.origin + window.location.pathname;\n                  }\n                }\n\n                console.log(_this8.tokenService.getClickID());\n              } else {\n                _this8.SignOut();\n\n                _this8.toastr.error(resp.errorDescription);\n              }\n\n              $('#login_loading').css('display', 'none');\n            }, err => {\n              _this8.SignOut();\n\n              console.log(err);\n            });\n          } else {\n            _this8.Login(result.user);\n          }\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(error => {\n        _this8.toastr.error('Something Went Wrong');\n\n        $('#login_loading').css('display', 'none');\n        console.log(error);\n      });\n    })();\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.ReCaptchaV3Service), i0.ɵɵinject(i4.AngularFireAuth), i0.ɵɵinject(i5.TokenService), i0.ɵɵinject(i6.ToastrService), i0.ɵɵinject(i7.AngularFireDatabase), i0.ɵɵinject(i8.LoginService), i0.ɵɵinject(i9.ClientApiService));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/Ahmed Kazdar/OneDrive/Desktop/Cricity Bet/MobileBet/src/app/socialshared/auth.service.ts"],"names":["firebase","environment","i0","i1","i2","i3","i4","i5","i6","i7","i8","i9","AuthService","constructor","router","http","recaptchaV3Service","fireAuth","tokenService","toastr","db","loginService","clientApi","isAffiliate","siteName","authState","subscribe","user","console","log","email","localStorage","setItem","JSON","parse","getItem","getb2cid","resp","b2cID","result","isLoggedIn","emailVerified","GoogleAuth","type","provider","auth","GoogleAuthProvider","AuthLogin","FacebookAuth","FacebookAuthProvider","SignOut","signOut","then","removeItem","SetUserData","database","ref","child","username","set","password","dob","phoneno","currency","SignUp","userData","createUserWithEmailAndPassword","firebaseId","uid","register","errorCode","SendVerificationMail","getClickID","affData","user_id","userId","click_id","aff_id","getAffId","offer_id","getOfferId","sendAffData","error","errorDescription","$","css","err","e","code","SignInWithEmail","signInWithEmailAndPassword","userName","login","setToken","token","setUserInfo","window","location","href","origin","pathname","currentUser","sendEmailVerification","navigate","signInWithPopup","addScope","RegisterWithSocial","Login","pendingCredential","credential","fetchSignInMethodsForEmail","methods","result_2","linkWithCredential","linkAndRetrieveDataWithCredential","addAffUser","status","firstName","displayName","split","lastName","currencyCode","phoneNumber","address","birthDate","blocChain","domain","isb2c","data","sendWelcomeMail","success","body","captcha","execute","phoneLogin","appVerifier","signInWithPhoneNumber","confirm","confirmationResult","catch","otpSubmit","pass","ɵfac","AuthService_Factory","t","ɵɵinject","Router","HttpClient","ReCaptchaV3Service","AngularFireAuth","TokenService","ToastrService","AngularFireDatabase","LoginService","ClientApiService","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { environment } from 'src/environments/environment';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/router\";\r\nimport * as i2 from \"@angular/common/http\";\r\nimport * as i3 from \"ng-recaptcha\";\r\nimport * as i4 from \"@angular/fire/auth\";\r\nimport * as i5 from \"../services/token.service\";\r\nimport * as i6 from \"ngx-toastr\";\r\nimport * as i7 from \"@angular/fire/database\";\r\nimport * as i8 from \"../services/login.service\";\r\nimport * as i9 from \"../services/client-api.service\";\r\nexport class AuthService {\r\n    constructor(router, http, recaptchaV3Service, fireAuth, tokenService, toastr, db, loginService, clientApi) {\r\n        this.router = router;\r\n        this.http = http;\r\n        this.recaptchaV3Service = recaptchaV3Service;\r\n        this.fireAuth = fireAuth;\r\n        this.tokenService = tokenService;\r\n        this.toastr = toastr;\r\n        this.db = db;\r\n        this.loginService = loginService;\r\n        this.clientApi = clientApi;\r\n        this.isAffiliate = environment.isAffiliate;\r\n        this.siteName = environment.siteName;\r\n        this.fireAuth.authState.subscribe(user => {\r\n            if (user) {\r\n                console.log(user.email);\r\n            }\r\n            else {\r\n                localStorage.setItem('user', 'null');\r\n                JSON.parse(localStorage.getItem('user'));\r\n            }\r\n        });\r\n        this.clientApi.getb2cid().subscribe((resp) => {\r\n            if (resp) {\r\n                this.b2cID = resp.result[0].b2cID;\r\n            }\r\n        });\r\n    }\r\n    get isLoggedIn() {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        return user !== null && user.emailVerified !== false ? true : false;\r\n    }\r\n    GoogleAuth(type) {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        return this.AuthLogin(provider, type);\r\n    }\r\n    FacebookAuth(type) {\r\n        const provider = new firebase.auth.FacebookAuthProvider();\r\n        return this.AuthLogin(provider, type);\r\n    }\r\n    async SignOut() {\r\n        await this.fireAuth.signOut().then(() => {\r\n            localStorage.removeItem('user');\r\n        });\r\n    }\r\n    SetUserData(user) {\r\n        this.db.database.ref('users').child(user.username).set({\r\n            email: user.email,\r\n            username: user.username,\r\n            password: user.password,\r\n            dob: user.dob,\r\n            phoneno: user.phoneno,\r\n            currency: user.currency\r\n        });\r\n    }\r\n    async SignUp(userData) {\r\n        try {\r\n            const result = await this.fireAuth.createUserWithEmailAndPassword(userData.email, userData.password);\r\n            if (result.user) {\r\n                userData.firebaseId = result.user.uid;\r\n                this.loginService\r\n                    .register(userData)\r\n                    .subscribe((resp) => {\r\n                    if (resp.errorCode === 0) {\r\n                        this.SendVerificationMail();\r\n                        if (this.isAffiliate && this.tokenService.getClickID() != null && this.tokenService.getClickID() != 'undefined') {\r\n                            let affData = {\r\n                                user_id: resp.result[0].userId,\r\n                                click_id: this.tokenService.getClickID(),\r\n                                aff_id: this.tokenService.getAffId(),\r\n                                offer_id: this.tokenService.getOfferId(),\r\n                                siteName: this.siteName\r\n                            };\r\n                            this.sendAffData(affData);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.toastr.error(resp.errorDescription);\r\n                        this.SignOut();\r\n                    }\r\n                    $('#login_loading').css('display', 'none');\r\n                }, err => {\r\n                    $('#login_loading').css('display', 'none');\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (e.code == 'auth/account-exists-with-different-credential' || e.code == 'auth/email-already-in-use') {\r\n                this.toastr.error(\"Email already in use by another account\");\r\n                $('#login_loading').css('display', 'none');\r\n            }\r\n        }\r\n    }\r\n    async SignInWithEmail(userData, type) {\r\n        try {\r\n            const result = await this.fireAuth.signInWithEmailAndPassword(userData.userName, userData.password);\r\n            if (result.user) {\r\n                if (result.user.emailVerified) {\r\n                    this.loginService\r\n                        .login(userData)\r\n                        .subscribe((resp) => {\r\n                        if (resp.errorCode === 0) {\r\n                            this.tokenService.setToken(resp.result[0].token);\r\n                            this.tokenService.setUserInfo(resp.result[0]);\r\n                            // this.router.navigate(['highlight']);\r\n                            // window.location.href = \"home\";\r\n                            window.location.href = window.location.origin + window.location.pathname;\r\n                        }\r\n                        else {\r\n                            if (!resp.errorDescription) {\r\n                                resp.errorDescription = \"Username or password is wrong\";\r\n                            }\r\n                            this.SignOut();\r\n                            this.toastr.error(resp.errorDescription);\r\n                        }\r\n                        $('#login_loading').css('display', 'none');\r\n                    });\r\n                }\r\n                else {\r\n                    $('#login_loading').css('display', 'none');\r\n                    this.toastr.error(\"Email Address is not Verified\");\r\n                    this.SignOut();\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (e.code == 'auth/user-not-found') {\r\n                this.toastr.error(\"User Not Found\");\r\n            }\r\n            if (e.code == 'auth/wrong-password') {\r\n                this.toastr.error(\"Invalid Password\");\r\n            }\r\n        }\r\n    }\r\n    async SendVerificationMail() {\r\n        return this.fireAuth.currentUser\r\n            .then((user) => {\r\n            return user.sendEmailVerification();\r\n        })\r\n            .then(() => {\r\n            this.router.navigate(['/highlight']).then(() => {\r\n                $('#verifyEmail').css('display', 'block');\r\n            });\r\n        });\r\n    }\r\n    async AuthLogin(provider, type) {\r\n        try {\r\n            const result = await this.fireAuth.signInWithPopup(provider);\r\n            provider.addScope('https://www.googleapis.com/auth/user.birthday.read');\r\n            if (type == 0) {\r\n                this.RegisterWithSocial(result.user, 0, this.b2cID);\r\n            }\r\n            else {\r\n                this.Login(result.user);\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (e.code == 'auth/account-exists-with-different-credential') {\r\n                var email = e.email;\r\n                var pendingCredential = e.credential;\r\n                this.fireAuth.fetchSignInMethodsForEmail(email).then((methods) => {\r\n                    if (methods[0] === 'password') {\r\n                        // var password = promptUserForPassword(); // TODO: implement promptUserForPassword.\r\n                        this.fireAuth.signInWithEmailAndPassword(email, 'password').then((result_2) => {\r\n                            // Step 4a.\r\n                            result_2.user.linkWithCredential(pendingCredential);\r\n                            this.Login(result_2.user);\r\n                        });\r\n                        return;\r\n                    }\r\n                    if (methods[0] === 'google.com') {\r\n                        this.toastr.error('You already have an account with the selected email address.');\r\n                        this.fireAuth.signInWithPopup(new firebase.auth.GoogleAuthProvider()).then((result) => {\r\n                            result.user.linkAndRetrieveDataWithCredential(pendingCredential);\r\n                            this.Login(result.user);\r\n                        });\r\n                        return;\r\n                    }\r\n                    if (methods[0] === 'facebook.com') {\r\n                        this.toastr.error('You already have an account with the selected email address.');\r\n                        this.fireAuth.signInWithPopup(new firebase.auth.FacebookAuthProvider()).then((result) => {\r\n                            result.user.linkAndRetrieveDataWithCredential(pendingCredential);\r\n                            this.Login(result.user);\r\n                        });\r\n                        return;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    sendAffData(affData) {\r\n        this.loginService.addAffUser(affData).subscribe((resp) => {\r\n            if (resp.status != 'Success') {\r\n                this.sendAffData(affData);\r\n            }\r\n        });\r\n    }\r\n    async RegisterWithSocial(user, type, b2cID) {\r\n        let userData = {\r\n            firstName: user.displayName != null ? user.displayName.split(' ')[0] : \"\",\r\n            lastName: user.displayName != null ? user.displayName.split(' ')[1] : \"\",\r\n            userName: \"\",\r\n            password: \"\",\r\n            currencyCode: environment.currency,\r\n            email: user.email != null ? user.email : \"\",\r\n            b2cID: b2cID,\r\n            phoneNumber: user.phoneNumber == null ? \"\" : user.phoneNumber,\r\n            address: \"\",\r\n            birthDate: user.birthDate != null ? user.birthDate : \"\",\r\n            firebaseId: user.uid,\r\n            blocChain: \"\",\r\n            domain: environment.origin,\r\n            isb2c: 1\r\n        };\r\n        console.log(userData);\r\n        this.loginService.register(userData).subscribe((resp) => {\r\n            console.log(resp);\r\n            // if (resp.errorCode === 0) {\r\n            //  if(type==0){\r\n            //   if(user.email!=null||user.email==\"\"){\r\n            //     let data={\"email\":user.email,\"siteName\":environment.siteName,\"domain\":environment.domain}\r\n            //     this.loginService.sendWelcomeMail(data).subscribe((resp:any)=>{console.log(resp.status)});\r\n            //   }\r\n            //   this.toastr.success('Registered Successfully');\r\n            //   this.tokenService.setToken(resp.result[0].token);\r\n            //   this.tokenService.setUserInfo(resp.result[0]);\r\n            //   window.location.href = window.location.origin + window.location.pathname;\r\n            //  }\r\n            // } else {\r\n            //   this.SignOut()\r\n            //   this.toastr.error(resp.errorDescription);\r\n            // }\r\n            if (resp.errorCode === 0) {\r\n                if (this.isAffiliate && this.tokenService.getClickID() != null && this.tokenService.getClickID() != 'undefined') {\r\n                    let affData = {\r\n                        user_id: resp.result[0].userId,\r\n                        click_id: this.tokenService.getClickID(),\r\n                        aff_id: this.tokenService.getAffId(),\r\n                        offer_id: this.tokenService.getOfferId(),\r\n                        siteName: this.siteName\r\n                    };\r\n                    this.sendAffData(affData);\r\n                }\r\n                else {\r\n                    if (type == 0) {\r\n                        if (user.email != null || user.email == \"\") {\r\n                            let data = { \"email\": user.email, \"siteName\": environment.siteName, \"domain\": environment.domain };\r\n                            this.loginService.sendWelcomeMail(data).subscribe((resp) => { console.log(resp.status); });\r\n                        }\r\n                        this.toastr.success('Registered Successfully');\r\n                        this.tokenService.setToken(resp.result[0].token);\r\n                        this.tokenService.setUserInfo(resp.result[0]);\r\n                        window.location.href = window.location.origin + window.location.pathname;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.SignOut();\r\n                this.toastr.error(resp.errorDescription);\r\n            }\r\n            $('#login_loading').css('display', 'none');\r\n        }, err => {\r\n            this.SignOut();\r\n            console.log(err);\r\n        });\r\n    }\r\n    Login(user) {\r\n        let body = {\r\n            userName: user.username != null ? user.username : \"\",\r\n            password: user.password != null ? user.password : \"\",\r\n            firebaseId: user.uid,\r\n            captcha: '0000',\r\n            log: '0000',\r\n            origin: environment.origin\r\n        };\r\n        this.recaptchaV3Service.execute('importantAction').subscribe((token) => {\r\n            if (token != null || token != \"\") {\r\n                this.loginService.login(body)\r\n                    .subscribe((resp) => {\r\n                    if (resp.errorCode === 0) {\r\n                        this.toastr.success(\"Login Successfully\");\r\n                        this.tokenService.setToken(resp.result[0].token);\r\n                        this.tokenService.setUserInfo(resp.result[0]);\r\n                        window.location.href = window.location.origin + window.location.pathname;\r\n                        $('#login_loading').css('display', 'none');\r\n                    }\r\n                    else {\r\n                        if (resp.errorDescription === \"User Not Found.\" || resp.errorDescription === \"invalid username/password6\") {\r\n                            this.RegisterWithSocial(user, 0, this.b2cID);\r\n                        }\r\n                    }\r\n                }, err => {\r\n                    this.SignOut();\r\n                    console.log(err);\r\n                });\r\n            }\r\n        });\r\n    }\r\n    async phoneLogin(phoneNumber, appVerifier) {\r\n        this.fireAuth.signInWithPhoneNumber(phoneNumber, appVerifier)\r\n            .then(result => {\r\n            console.log(result.confirm);\r\n            if (result.confirm) {\r\n                this.toastr.success('OTP has been sent. Please check your phone.');\r\n                $('#login_loading').css('display', 'none');\r\n                this.confirmationResult = result;\r\n            }\r\n        })\r\n            .catch(error => console.log(error));\r\n    }\r\n    async otpSubmit(code, type, pass, dob, b2cID) {\r\n        this.confirmationResult.confirm(code).then(async (result) => {\r\n            if (type == 0) {\r\n                let userData = {\r\n                    firstName: result.user.displayName != null ? result.user.displayName.split(' ')[0] : \"\",\r\n                    lastName: result.user.displayName != null ? result.user.displayName.split(' ')[1] : \"\",\r\n                    userName: \"\",\r\n                    password: type == 0 ? pass : \"\",\r\n                    currencyCode: environment.currency,\r\n                    email: \"\",\r\n                    b2cID: b2cID,\r\n                    phoneNumber: result.user.phoneNumber == null ? \"\" : result.user.phoneNumber,\r\n                    address: \"\",\r\n                    birthDate: type == 0 ? dob : result.user.birthDate != null ? result.user.birthDate : \"\",\r\n                    firebaseId: result.user.uid,\r\n                    blocChain: \"\",\r\n                    domain: environment.origin,\r\n                    isb2c: 1\r\n                };\r\n                console.log(userData);\r\n                this.loginService.register(userData).subscribe((resp) => {\r\n                    console.log(resp);\r\n                    // if (resp.errorCode === 0) {\r\n                    //  if(type==0){\r\n                    //   this.toastr.success('Registered Successfully');\r\n                    //   this.tokenService.setToken(resp.result[0].token);\r\n                    //   this.tokenService.setUserInfo(resp.result[0]);\r\n                    //   window.location.href = window.location.origin + window.location.pathname;\r\n                    //  }\r\n                    // } else {\r\n                    //   this.SignOut()\r\n                    //   this.toastr.error(resp.errorDescription);\r\n                    // }\r\n                    if (resp.errorCode === 0) {\r\n                        if (this.isAffiliate && this.tokenService.getClickID() != null && this.tokenService.getClickID() != 'undefined') {\r\n                            let affData = {\r\n                                user_id: resp.result[0].userId,\r\n                                click_id: this.tokenService.getClickID(),\r\n                                aff_id: this.tokenService.getAffId(),\r\n                                offer_id: this.tokenService.getOfferId(),\r\n                                siteName: this.siteName\r\n                            };\r\n                            this.sendAffData(affData);\r\n                        }\r\n                        else {\r\n                            if (type == 0) {\r\n                                this.toastr.success('Registered Successfully');\r\n                                this.tokenService.setToken(resp.result[0].token);\r\n                                this.tokenService.setUserInfo(resp.result[0]);\r\n                                window.location.href = window.location.origin + window.location.pathname;\r\n                            }\r\n                        }\r\n                        console.log(this.tokenService.getClickID());\r\n                    }\r\n                    else {\r\n                        this.SignOut();\r\n                        this.toastr.error(resp.errorDescription);\r\n                    }\r\n                    $('#login_loading').css('display', 'none');\r\n                }, err => {\r\n                    this.SignOut();\r\n                    console.log(err);\r\n                });\r\n            }\r\n            else {\r\n                this.Login(result.user);\r\n            }\r\n        }).catch((error) => {\r\n            this.toastr.error('Something Went Wrong');\r\n            $('#login_loading').css('display', 'none');\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\nAuthService.ɵfac = function AuthService_Factory(t) { return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.ReCaptchaV3Service), i0.ɵɵinject(i4.AngularFireAuth), i0.ɵɵinject(i5.TokenService), i0.ɵɵinject(i6.ToastrService), i0.ɵɵinject(i7.AngularFireDatabase), i0.ɵɵinject(i8.LoginService), i0.ɵɵinject(i9.ClientApiService)); };\r\nAuthService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthService, factory: AuthService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}