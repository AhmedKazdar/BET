{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./main.service\";\nexport let CasinoApiService = /*#__PURE__*/(() => {\n  class CasinoApiService {\n    constructor(http, main) {\n      this.http = http;\n      this.main = main;\n      this.loggedIn = new BehaviorSubject(false);\n      this.siteName = environment.siteName;\n      main.apis2$.subscribe(res => {\n        if (res) {\n          this.baseUrl = res.ip;\n          this.casinoUrl = res.casApi;\n          this.awcUrl = res.awcApi;\n        }\n      });\n    }\n\n    casinoRate(gtype) {\n      let url = `${this.casinoUrl}/api/d_rate/${gtype}`;\n      return this.http.get(url);\n    }\n\n    lastResult(gtype) {\n      let url = `${this.casinoUrl}/api/l_result/${gtype}`;\n      return this.http.get(url);\n    }\n\n    roundResult(gtype, roundId) {\n      let url = `${this.casinoUrl}/api/r_result/${gtype}/${roundId}`;\n      return this.http.get(url);\n    }\n\n    loadTable(casinoType) {\n      return this.http.get(`${this.baseUrl}/loadTable/${casinoType}`);\n    }\n\n    placeTpBet(data) {\n      return this.http.post(`${this.baseUrl}/TPplaceBets`, data);\n    }\n\n    requestResult(reqId) {\n      return this.http.get(`${this.baseUrl}/requestResult/${reqId}`);\n    }\n\n    listBooks(tableName, roundId, selectionId) {\n      let url = `${this.baseUrl}/listBooks/${tableName}/${roundId}/${selectionId}`;\n      return this.http.get(url);\n    }\n\n    listProviders() {\n      return this.http.get(`${this.baseUrl}/listProviders`);\n    }\n\n    betgamesdata(data) {\n      return this.http.post(`https://betgames.cricity.net/pad=401/auth`, data);\n    }\n\n    awclist() {\n      return this.http.get(`${this.baseUrl}/listAWCCasinoPlatforms`);\n    } // awcAuth(params){\n    //   return this.http.post(`https://awc.vrnl.net/pad=500/api/auth`, params);\n    // }\n\n\n    awcAuth(params) {\n      return this.http.post(`${this.awcUrl}/api/auth`, params);\n    }\n\n    getAWCTable() {\n      return this.http.get(`/assets/awc_json/${this.siteName}.json`);\n    }\n\n    bolist() {\n      return this.http.get(`${this.baseUrl}/listBOGCasinoPlatforms`);\n    }\n\n    boAuth(params) {\n      return this.http.post(`https://blueocean.vrnl.net/pad=700/api/auth`, params);\n    }\n\n    boGames(provider) {\n      return this.http.get(`https://blueocean.vrnl.net/pad=700/api/Games/${provider}`);\n    }\n\n    amanAuthNew(data) {\n      if (this.siteName == \"cricbuzzercom\") {\n        return this.http.post(`https://casino.cricity.net/pad=93/api/poker/auth/`, data);\n      } else {\n        return this.http.post(`https://aura.vrnl.net/pad=93/api/poker/auth/`, data);\n      }\n    }\n\n    getAuraOperators() {\n      const domain = origin.replace(/(^\\w+:|^)\\/\\/(www\\.)?/, '');\n      return this.http.get(`https://api3.vrnlapi.live:3479/api/getAuraOperators/${domain}`);\n    }\n\n  }\n\n  CasinoApiService.ɵfac = function CasinoApiService_Factory(t) {\n    return new (t || CasinoApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MainService));\n  };\n\n  CasinoApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CasinoApiService,\n    factory: CasinoApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return CasinoApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}